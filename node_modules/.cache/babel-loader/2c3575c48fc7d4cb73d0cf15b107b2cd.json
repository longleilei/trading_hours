{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/regionBox/RegionBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as styles from './RegionBox.module.scss';\nimport { AiFillMinusCircle } from 'react-icons/ai';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport Clock from '../clock/Clock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegionBox = ({\n  continentName,\n  data\n}) => {\n  _s();\n\n  const [show, setShow] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(data);\n\n  const showHandler = () => {\n    setShow(show => !show);\n  };\n\n  const continentMap = () => {\n    let eur = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.clockBoxes,\n      children: europe.map(el => /*#__PURE__*/_jsxDEV(Clock, {\n        id: el['id'],\n        regionName: el['country'],\n        cityName: el['city']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 20\n    }, this);\n  }; //need to optimize this part \n\n\n  const renderByContinent = continentName => {\n    let europe = [];\n    let asia = [];\n    let southAmerica = [];\n    let northAmerica = [];\n    data.forEach(d => {\n      if (d.continent === 'Europe') {\n        europe.push(d);\n      } else if (d.continent === 'Asia') {\n        asia.push(d);\n      } else if (d.continent == 'South America') {\n        southAmerica.push(d);\n      } else if (d.continent == 'South America') {\n        northAmerica.push(d);\n      }\n    }); //for europe \n\n    let eur = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.clockBoxes,\n      children: europe.map(el => /*#__PURE__*/_jsxDEV(Clock, {\n        id: el['id'],\n        regionName: el['country'],\n        cityName: el['city']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 20\n    }, this); //for asia \n\n\n    let as = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.clockBoxes,\n      children: asia.map(el => /*#__PURE__*/_jsxDEV(Clock, {\n        id: el['id'],\n        regionName: el['country'],\n        cityName: el['city']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }, this);\n\n    continentMap; // (<div className={styles.clockBoxes}>   \n    //     {/* <Clock \n    //         regionName={europe[0]}\n    //         cityName={europe[0]}\n    //     /> */}\n    //     <Clock \n    //         regionName={'Belgium'}\n    //         cityName={'Brussels'}\n    //     />\n    //     <Clock  \n    //         regionName={'France'}\n    //         cityName={'Paris'}\n    //     />\n    //     <Clock \n    //         regionName={'United Kingdom'}\n    //         cityName={'London'}\n    //     />\n    // </div>); \n    // const southAmerica = \n    // (<div className={styles.clockBoxes}>   \n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Argentina'}\n    //         cityName={'Buenos Aires'}\n    //     />\n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Brazil'}\n    //         cityName={'San Paulo'}\n    //     />\n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Chile'}\n    //         cityName={'Santiago'}\n    //     />\n    // </div>); \n    // const northAmerica = \n    // (<div className={styles.clockBoxes}>   \n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'USA'}\n    //         cityName={'New York'}\n    //     />\n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Canada'}\n    //         cityName={'Toronto'}\n    //     />\n    // </div>); \n\n    switch (continentName) {\n      case 'Asia':\n        return as;\n\n      case 'Europe':\n        return eur;\n\n      case 'South America':\n        return southA;\n\n      case 'North America':\n        return northA;\n\n      default:\n        return 0;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.regionBox,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.greyStripe,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.left,\n        children: continentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.right,\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 35\n        }, this), show ? /*#__PURE__*/_jsxDEV(AiFillMinusCircle, {\n          onClick: showHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(AiFillPlusCircle, {\n          onClick: showHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), show && renderByContinent(continentName)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegionBox, \"b5sSxw7RO2GIZGDfGU8+TXgjfng=\");\n\n_c = RegionBox;\nexport default RegionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegionBox\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/regionBox/RegionBox.js"],"names":["React","useState","useEffect","styles","AiFillMinusCircle","AiFillPlusCircle","Clock","RegionBox","continentName","data","show","setShow","isLoading","setIsLoading","console","log","showHandler","continentMap","eur","clockBoxes","europe","map","el","renderByContinent","asia","southAmerica","northAmerica","forEach","d","continent","push","as","southA","northA","regionBox","greyStripe","left","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport * as styles from './RegionBox.module.scss'; \nimport { AiFillMinusCircle } from 'react-icons/ai'; \nimport { AiFillPlusCircle } from 'react-icons/ai'; \n\nimport Clock from '../clock/Clock'; \n\n\n\nconst RegionBox = ({ continentName, data }) => {\n\n   \n    const [ show, setShow ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(false); \n\n    console.log(data);\n\n    const showHandler = () => {\n        setShow(show => !show ); \n    }\n\n    const continentMap = () => {\n\n        let eur = (<div className={styles.clockBoxes}>   \n            { \n                europe.map(el => \n                    \n                    <Clock \n                    id={el['id']}\n                    regionName={el['country']}\n                    cityName={el['city']}\n                    />) \n            }\n        </div>); \n\n    }\n\n    //need to optimize this part \n    const renderByContinent = (continentName) =>{\n\n       \n        let europe = []; \n        let asia = []; \n        let southAmerica = []; \n        let northAmerica = []; \n        \n        \n        data.forEach(d => {\n\n            if(d.continent === 'Europe'){\n                europe.push(d); \n            } else if(d.continent === 'Asia'){\n                asia.push(d);\n            } else if(d.continent == 'South America'){\n                southAmerica.push(d); \n            } else if(d.continent == 'South America'){\n                northAmerica.push(d); \n            } \n        }); \n\n        //for europe \n        let eur = (<div className={styles.clockBoxes}>   \n            { \n                europe.map(el => \n                    \n                    <Clock \n                    id={el['id']}\n                    regionName={el['country']}\n                    cityName={el['city']}\n                    />) \n            }\n        </div>); \n\n        //for asia \n        let as = (<div className={styles.clockBoxes}>   \n            { \n                asia.map(el => \n                    \n                    <Clock \n                    id={el['id']}\n                    regionName={el['country']}\n                    cityName={el['city']}\n                    />) \n            }\n        </div>); \n\ncontinentMap\n\n\n\n\n\n\n        // (<div className={styles.clockBoxes}>   \n        //     {/* <Clock \n        //         regionName={europe[0]}\n        //         cityName={europe[0]}\n        //     /> */}\n        //     <Clock \n\n        //         regionName={'Belgium'}\n        //         cityName={'Brussels'}\n        //     />\n        //     <Clock  \n        //         regionName={'France'}\n        //         cityName={'Paris'}\n        //     />\n        //     <Clock \n        //         regionName={'United Kingdom'}\n        //         cityName={'London'}\n        //     />\n        // </div>); \n\n        // const southAmerica = \n        // (<div className={styles.clockBoxes}>   \n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Argentina'}\n        //         cityName={'Buenos Aires'}\n        //     />\n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Brazil'}\n        //         cityName={'San Paulo'}\n        //     />\n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Chile'}\n        //         cityName={'Santiago'}\n        //     />\n            \n        // </div>); \n\n        // const northAmerica = \n        // (<div className={styles.clockBoxes}>   \n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'USA'}\n        //         cityName={'New York'}\n        //     />\n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Canada'}\n        //         cityName={'Toronto'}\n        //     />\n            \n            \n        // </div>); \n        \n        \n        switch(continentName){\n            case 'Asia': \n                return as; \n            case 'Europe': \n                return eur; \n            case 'South America': \n                return southA; \n            case 'North America':\n                return northA; \n            default: \n                return 0; \n        }\n    }\n\n    \n    \n\n   \n    return (\n        <div className={styles.regionBox}>\n            <div className={styles.greyStripe}>\n                <div className={styles.left}>{continentName}</div>\n                <div className={styles.right}>\n                    {isLoading && <div>Loading...</div>}\n                    {show ?  \n                        <AiFillMinusCircle onClick={showHandler}/> : \n                        <AiFillPlusCircle onClick={showHandler}/>\n                    }  \n                </div>\n            </div>\n            { show && renderByContinent(continentName)}\n            \n        </div>\n    )\n}\n\nexport default RegionBox; \n"]},"metadata":{},"sourceType":"module"}