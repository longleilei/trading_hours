{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/geoSelector/GeoSelector.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GeoSelector = () => {\n  _s();\n\n  const initialGeoState = {\n    regioncountry: '',\n    region: ''\n  };\n  const [geoState, setGeoState] = useState(initialGeoState);\n\n  const selectCountry = val => {\n    setGeoState({ ...setGeoState,\n      country: val\n    });\n  };\n\n  const selectRegion = val => {\n    setGeoState({ ...setGeoState,\n      region: val\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CountryDropdown, {\n      value: geoState.country,\n      name: geoState.country,\n      onChange: val => selectCountry(val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RegionDropdown, {\n      country: geoState.country,\n      value: geoState.region,\n      name: geoState.country,\n      onChange: val => selectRegion(val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GeoSelector, \"SayJ3UFwm7fP2MXgpwc1+oNCziI=\");\n\n_c = GeoSelector;\nexport default GeoSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeoSelector\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/geoSelector/GeoSelector.js"],"names":["React","useState","CountryDropdown","RegionDropdown","CountryRegionData","GeoSelector","initialGeoState","regioncountry","region","geoState","setGeoState","selectCountry","val","country","selectRegion"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,QAAmE,+BAAnE;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAMC,eAAe,GAAG;AAAGC,IAAAA,aAAa,EAAE,EAAlB;AAAsBC,IAAAA,MAAM,EAAE;AAA9B,GAAxB;AAEA,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BT,QAAQ,CAACK,eAAD,CAA1C;;AAEA,QAAMK,aAAa,GAAIC,GAAD,IAAS;AAC3BF,IAAAA,WAAW,CAAC,EAAC,GAAGA,WAAJ;AAAiBG,MAAAA,OAAO,EAAED;AAA1B,KAAD,CAAX;AACH,GAFD;;AAIA,QAAME,YAAY,GAAIF,GAAD,IAAS;AAC1BF,IAAAA,WAAW,CAAC,EAAC,GAAGA,WAAJ;AAAiBF,MAAAA,MAAM,EAAEI;AAAzB,KAAD,CAAX;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,eAAD;AACI,MAAA,KAAK,EAAEH,QAAQ,CAACI,OADpB;AAEI,MAAA,IAAI,EAAEJ,QAAQ,CAACI,OAFnB;AAGI,MAAA,QAAQ,EAAED,GAAG,IAAID,aAAa,CAACC,GAAD;AAHlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,cAAD;AACI,MAAA,OAAO,EAAEH,QAAQ,CAACI,OADtB;AAEI,MAAA,KAAK,EAAEJ,QAAQ,CAACD,MAFpB;AAGI,MAAA,IAAI,EAAEC,QAAQ,CAACI,OAHnB;AAII,MAAA,QAAQ,EAAED,GAAG,IAAIE,YAAY,CAACF,GAAD;AAJjC;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA9BD;;GAAMP,W;;KAAAA,W;AAgCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react'; \nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\n\nconst GeoSelector = () => {\n\n    const initialGeoState = {  regioncountry: '', region: '' }; \n\n    const [ geoState, setGeoState ] = useState(initialGeoState); \n\n    const selectCountry = (val) => {\n        setGeoState({...setGeoState, country: val}); \n    }\n\n    const selectRegion = (val) => {\n        setGeoState({...setGeoState, region: val}); \n    }\n\n    return (\n        <div>\n            <CountryDropdown\n                value={geoState.country}\n                name={geoState.country}\n                onChange={val => selectCountry(val)}\n            />\n\n            <RegionDropdown\n                country={geoState.country}\n                value={geoState.region}\n                name={geoState.country}\n                onChange={val => selectRegion(val)}\n            />   \n        </div>\n    )\n}\n\nexport default GeoSelector; \n"]},"metadata":{},"sourceType":"module"}