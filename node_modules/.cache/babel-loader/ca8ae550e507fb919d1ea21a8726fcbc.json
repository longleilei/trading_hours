{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/clock/Clock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Overlay, Popover } from 'react-bootstrap';\nimport './Clock.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clock = ({\n  regionName,\n  cityName,\n  utcoffset,\n  openHoursOne,\n  openHoursTwo\n}) => {\n  _s();\n\n  //let city = cityName; \n  let localTime = {};\n  const initialState = {\n    secondRatio: 0,\n    minuteRatio: 0,\n    hourRatio: 0\n  }; //const [ cit, setCit ] = useState(''); \n\n  const [clockState, setClockState] = useState(initialState);\n  const [time, setTime] = useState(0);\n  const [dayTimeStr, setDayTimeStr] = useState('');\n  const [hoursClosed, setHoursClosed] = useState(false); //for bs popup \n\n  const [show, setShow] = useState(false);\n  const [target, setTarget] = useState(null);\n  const ref = useRef(null);\n\n  const handleClick = event => {\n    setShow(!show);\n    setTarget(event.target);\n  };\n\n  const calculateUniversalUTC = () => {\n    //returns local date from where the app is used \n    let date = new Date(); //console.log(date); \n    //offcet taken at the place where app is used \n\n    let app_utc_offcet = date.getTimezoneOffset(); //returns -480 \n    //this is the abstract date according to UTC\n\n    date.setHours(date.getHours() + app_utc_offcet / 60); //console.log('ABSTRACT TIME', date); \n\n    return date;\n  };\n\n  const calculateCurrentLocalDate = () => {\n    let utcdate = calculateUniversalUTC(); //calculate time according to offcet of the country\n\n    utcdate.setHours(utcdate.getHours() - utcoffset / 60); //console.log('SHANGHAI TIME', utcdate); \n\n    return utcdate;\n  };\n\n  const formatDate = date => {\n    let d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    let year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }; //delete this function\n\n\n  const splitTimeSlot = openHoursOne => {\n    let countryHours = openHoursOne.split('-'); //['11:00', '14:00'] or instead ['11am', '2pm']\n\n    let hoursFrom = Number(countryHours[0].slice(0, 2));\n    let hoursTo = Number(countryHours[1].slice(0, 2));\n    return {\n      hoursFrom,\n      hoursTo\n    };\n  };\n\n  const digitalClockConverter = date => {\n    //getting day of the week \n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'];\n    let dayNum = Number(date.getDay());\n    let stsDay = days[dayNum]; //getting hours in am/pm \n\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    let strTime = hours + ':' + minutes + ' ' + ampm;\n    let timeStr = stsDay + ' ' + strTime;\n    setDayTimeStr(dayTimeStr => timeStr);\n  };\n\n  const clockStateHandler = date => {\n    let secondRatio = date.getSeconds() / 60;\n    let minuteRatio = (secondRatio + date.getMinutes()) / 60;\n    let hourRatio = (minuteRatio + date.getHours()) / 12;\n    setClockState({ ...clockState,\n      secondRate: secondRatio,\n      minuteRate: minuteRatio,\n      hourRate: hourRatio\n    });\n  };\n\n  const clockHandler = () => {\n    let currentDate = calculateCurrentLocalDate();\n    clockStateHandler(currentDate);\n    digitalClockConverter(currentDate);\n  };\n\n  const calculateLocalTime = () => {\n    //Amsterdam 19:00 is 01:00 locally => 6 hours \n    //Amsterdam utc +2 Local utc +8 => 6 hours difference \n    const date = new Date();\n    const localUTC = date.getTimezoneOffset();\n    let utcDiff = localUTC / 60 - utcoffset / 60; //console.log(utcDiff); //6\n    //11:00-14:00\n\n    let countryHours = openHoursOne.split('-'); //['11:00', '14:00'] or instead ['11am', '2pm']\n\n    let hoursFrom = Number(countryHours[0].slice(0, 2)) + utcDiff;\n    let hoursTo = Number(countryHours[1].slice(0, 2)) + utcDiff;\n    return {\n      hoursFrom,\n      hoursTo\n    };\n  };\n\n  const calculateUntilBreak = () => {};\n\n  const calculateUntilOpen = () => {\n    const endtime = new Date(); //on Friday when it's closed already, we add + 2 days to get to Monday (get endtime)\n\n    if (hoursClosed) {\n      const numberOfDaysToAdd = 3;\n      endtime.setDate(endtime.getDate() + numberOfDaysToAdd);\n    } else if (endtime.getDay() == 6) {\n      //check if Saturday \n      const numberOfDaysToAdd = 2;\n      endtime.setDate(endtime.getDate() + numberOfDaysToAdd);\n    } else if (endtime.getDay() == 0) {\n      //check if Sunday\n      const numberOfDaysToAdd = 1;\n      endtime.setDate(endtime.getDate() + numberOfDaysToAdd);\n    } // console.log(endtime); \n    //const endtime = 'Mon Apr 19 2021 14:14:37 '; \n\n\n    const total = Date.parse(endtime) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / (1000 * 60 * 60) % 24);\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    console.log({\n      total,\n      days,\n      hours,\n      minutes,\n      seconds\n    }); // return {total,days,hours,minutes,seconds};\n  };\n\n  calculateUntilOpen();\n\n  const handleOpenButton = () => {\n    //get current local time\n    let currentLocalTime = calculateCurrentLocalDate(); //console.log(currentLocalTime); \n\n    let formattedDate = formatDate(currentLocalTime);\n    const timeNow = new Date();\n    let countryHours = openHoursOne.split('-');\n    let startTime = countryHours[0];\n    let endTime = countryHours[1];\n    let startTimeObj = new Date(`${formattedDate} ${startTime}`);\n    let endTimeObj = new Date(`${formattedDate} ${endTime}`);\n    let open = ''; //check if it's Saturday or Sunday \n\n    if (timeNow.getDay() == 6 || timeNow.getDay() == 0) {\n      open = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"oval red\",\n        children: \"Closed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this);\n    } else {\n      open = timeNow < endTimeObj && timeNow > startTimeObj ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"oval green\",\n        children: \"Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"oval red\",\n        children: \"Closed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 16\n      }, this);\n    }\n\n    if (timeNow.getDay() == 5 && open == /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"oval red\",\n      children: \"Closed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 46\n    }, this)) {\n      setHoursClosed(hoursClosed => true);\n    }\n\n    ; //console.log(hoursClosed)\n\n    return open;\n  };\n\n  localTime = calculateLocalTime(); //console.log(localTime);\n\n  useEffect(() => {\n    //console.log('CITYNAME', cityName); \n    const interval = setInterval(() => {\n      clockHandler();\n      setTime(Date.now());\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainFont\",\n        children: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"secondaryFont\",\n        children: regionName.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainFont\",\n        children: dayTimeStr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand hour\",\n          style: {\n            transform: `translate(-50%) rotate(${clockState.hourRate * 360}deg)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand minute\",\n          style: {\n            transform: `translate(-50%) rotate(${clockState.minuteRate * 360}deg)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand second\",\n          style: {\n            transform: `translate(-50%) rotate(${clockState.secondRate * 360}deg)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number7\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number9\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number10\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number11\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"11\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: handleOpenButton()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"1:01:38 until break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"5:01:38 until close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"oval2\",\n          onClick: handleClick,\n          children: \"Show Open/Close Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n          show: show,\n          target: target,\n          placement: \"top\",\n          containerPadding: 20,\n          children: /*#__PURE__*/_jsxDEV(Popover, {\n            id: \"popover-contained\",\n            children: /*#__PURE__*/_jsxDEV(Popover.Content, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"contentBox\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"shedule\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [cityName.toUpperCase(), \" TIME\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: openHoursOne\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"shedule\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"LOCAL TIME\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: `${localTime['hoursFrom']}:00 - ${localTime['hoursTo']}:00`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Clock, \"5PLvaFB+HBthcijN9k5PSM7JxsA=\");\n\n_c = Clock;\nexport default Clock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/clock/Clock.js"],"names":["React","useState","useEffect","useRef","Overlay","Popover","Clock","regionName","cityName","utcoffset","openHoursOne","openHoursTwo","localTime","initialState","secondRatio","minuteRatio","hourRatio","clockState","setClockState","time","setTime","dayTimeStr","setDayTimeStr","hoursClosed","setHoursClosed","show","setShow","target","setTarget","ref","handleClick","event","calculateUniversalUTC","date","Date","app_utc_offcet","getTimezoneOffset","setHours","getHours","calculateCurrentLocalDate","utcdate","formatDate","d","month","getMonth","day","getDate","year","getFullYear","length","join","splitTimeSlot","countryHours","split","hoursFrom","Number","slice","hoursTo","digitalClockConverter","days","dayNum","getDay","stsDay","hours","minutes","getMinutes","ampm","strTime","timeStr","clockStateHandler","getSeconds","secondRate","minuteRate","hourRate","clockHandler","currentDate","calculateLocalTime","localUTC","utcDiff","calculateUntilBreak","calculateUntilOpen","endtime","numberOfDaysToAdd","setDate","total","parse","seconds","Math","floor","console","log","handleOpenButton","currentLocalTime","formattedDate","timeNow","startTime","endTime","startTimeObj","endTimeObj","open","interval","setInterval","now","clearInterval","toUpperCase","transform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'; \nimport { Overlay, Popover } from 'react-bootstrap';\n\nimport './Clock.css'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\n\n\nconst Clock = ({ regionName, cityName, utcoffset, openHoursOne, openHoursTwo }) => {\n\n    //let city = cityName; \n    let localTime = {}; \n\n    const initialState = { secondRatio: 0, minuteRatio: 0, hourRatio: 0 }; \n    \n    //const [ cit, setCit ] = useState(''); \n    const [ clockState, setClockState ] = useState(initialState);\n    const [ time, setTime ] = useState(0);  \n    const [ dayTimeStr, setDayTimeStr ] = useState('');\n    const [ hoursClosed, setHoursClosed ] = useState(false); \n\n    //for bs popup \n    const [show, setShow] = useState(false);\n    const [target, setTarget] = useState(null);\n    const ref = useRef(null);\n\n    \n    \n    const handleClick = (event) => {\n        setShow(!show);\n        setTarget(event.target);\n    };\n\n    const calculateUniversalUTC = () => {\n\n        //returns local date from where the app is used \n        let date = new Date;    \n        //console.log(date); \n    \n        //offcet taken at the place where app is used \n        let app_utc_offcet = date.getTimezoneOffset(); //returns -480 \n\n        //this is the abstract date according to UTC\n        date.setHours(date.getHours() + (app_utc_offcet/60)); \n        //console.log('ABSTRACT TIME', date); \n\n        return date; \n    }\n\n    const calculateCurrentLocalDate = () => {\n\n        let utcdate = calculateUniversalUTC(); \n\n        //calculate time according to offcet of the country\n        utcdate.setHours(utcdate.getHours() - (utcoffset/60)); \n        //console.log('SHANGHAI TIME', utcdate); \n\n        return utcdate; \n\n    }\n\n    const formatDate = (date) => {\n        let d = new Date(date); \n\n        let month = '' + (d.getMonth() + 1);\n        let day = '' + d.getDate();\n        let year = d.getFullYear();\n\n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n\n        return [year, month, day].join('-');\n    }\n\n    //delete this function\n    const splitTimeSlot = (openHoursOne) => {\n        let countryHours = openHoursOne.split('-'); //['11:00', '14:00'] or instead ['11am', '2pm']\n        \n        let hoursFrom = Number(countryHours[0].slice(0,2));  \n        let hoursTo = Number(countryHours[1].slice(0,2));\n\n        return { hoursFrom, hoursTo}; \n    }\n\n    const digitalClockConverter = (date) => {\n\n        \n        //getting day of the week \n        const days = ['Sun','Mon','Tue','Wed','Thur','Fri','Sat'];\n        let dayNum = Number(date.getDay()); \n        let stsDay = days[dayNum]; \n        \n\n        //getting hours in am/pm \n        let hours = date.getHours();\n        let minutes = date.getMinutes();\n        let ampm = hours >= 12 ? 'PM' : 'AM';\n        hours = hours % 12;\n        hours = hours ? hours : 12; \n        minutes = minutes < 10 ? '0'+minutes : minutes;\n        let strTime = hours + ':' + minutes + ' ' + ampm;\n        \n        let timeStr = stsDay + ' ' + strTime;\n\n        setDayTimeStr( dayTimeStr => timeStr); \n        \n    } \n  \n\n    const clockStateHandler = (date) => {\n        \n        let secondRatio = date.getSeconds() / 60; \n        let minuteRatio = (secondRatio + date.getMinutes()) / 60; \n        let hourRatio = (minuteRatio + date.getHours()) / 12;  \n    \n        setClockState({...clockState, secondRate: secondRatio, minuteRate: minuteRatio, hourRate: hourRatio});\n\n    }\n\n    const clockHandler = () => {\n\n        \n        let currentDate = calculateCurrentLocalDate(); \n    \n        clockStateHandler(currentDate); \n        digitalClockConverter(currentDate);\n\n\n    }\n\n    const calculateLocalTime = () => {\n        //Amsterdam 19:00 is 01:00 locally => 6 hours \n        //Amsterdam utc +2 Local utc +8 => 6 hours difference \n\n        const date = new Date;\n        const localUTC = date.getTimezoneOffset(); \n\n        let utcDiff = (localUTC/60) - (utcoffset/60); \n        //console.log(utcDiff); //6\n\n        //11:00-14:00\n        let countryHours = openHoursOne.split('-'); //['11:00', '14:00'] or instead ['11am', '2pm']\n        \n        let hoursFrom = Number(countryHours[0].slice(0,2)) + utcDiff;  \n        let hoursTo = Number(countryHours[1].slice(0,2)) + utcDiff;\n        \n        return { hoursFrom, hoursTo }; \n        \n    }\n\n    const calculateUntilBreak = () => {\n\n    }\n\n    const calculateUntilOpen = () => {\n        const endtime = new Date(); \n\n        //on Friday when it's closed already, we add + 2 days to get to Monday (get endtime)\n        if(hoursClosed){\n            const numberOfDaysToAdd = 3;\n            endtime.setDate(endtime.getDate() + numberOfDaysToAdd); \n        } else if (endtime.getDay() == 6){ //check if Saturday \n            const numberOfDaysToAdd = 2;\n            endtime.setDate(endtime.getDate() + numberOfDaysToAdd); \n        } else if(endtime.getDay() == 0){ //check if Sunday\n            const numberOfDaysToAdd = 1;\n            endtime.setDate(endtime.getDate() + numberOfDaysToAdd); \n        }\n\n        // console.log(endtime); \n\n        //const endtime = 'Mon Apr 19 2021 14:14:37 '; \n        const total = Date.parse(endtime) - Date.parse(new Date());\n        const seconds = Math.floor( (total/1000) % 60 );\n        const minutes = Math.floor( (total/1000/60) % 60 );\n        const hours = Math.floor( (total/(1000*60*60)) % 24 );\n        const days = Math.floor( total/(1000*60*60*24) );\n\n        console.log({total,days,hours,minutes,seconds}); \n        // return {total,days,hours,minutes,seconds};\n\n    }\n\n    calculateUntilOpen(); \n\n\n    const handleOpenButton = () => {\n\n        //get current local time\n        let currentLocalTime = calculateCurrentLocalDate(); \n        //console.log(currentLocalTime); \n\n        let formattedDate = formatDate(currentLocalTime); \n        \n        const timeNow = new Date(); \n        \n\n        let countryHours = openHoursOne.split('-'); \n        let startTime = countryHours[0]; \n        let endTime = countryHours[1]; \n\n\n        let startTimeObj = new Date(`${formattedDate} ${startTime}`); \n        let endTimeObj = new Date(`${formattedDate} ${endTime}`);\n\n        let open = ''; \n\n        //check if it's Saturday or Sunday \n        if(timeNow.getDay() == 6 || timeNow.getDay() == 0){\n            open = (<div className=\"oval red\">Closed</div>); \n\n        } else {\n            open = timeNow < endTimeObj && timeNow > startTimeObj \n            ? (<div className=\"oval green\">Open</div>) \n            : (<div className=\"oval red\">Closed</div>); \n        }\n\n        if(timeNow.getDay() == 5 && open == (<div className=\"oval red\">Closed</div>)){\n            setHoursClosed(hoursClosed => true); \n        }; \n         \n        //console.log(hoursClosed)\n        return open;  \n    }\n\n \n\n\n\n\n    localTime = calculateLocalTime(); \n    //console.log(localTime);\n    \n    \n\n    \n    useEffect(() => {\n        //console.log('CITYNAME', cityName); \n        const interval = setInterval(() => {\n            clockHandler();\n            setTime(Date.now())    \n        }, 1000); \n       \n        return () => {\n            clearInterval(interval);\n        };\n    \n        \n    }, [time]); \n\n\n    return (\n        <div className=\"mainContainer\">\n            <div className=\"top\">\n                <div className=\"mainFont\">{cityName}</div>\n                <div className=\"secondaryFont\">{regionName.toUpperCase()}</div>\n                <div className=\"mainFont\">{dayTimeStr}</div>\n            </div>\n\n            <div class=\"middle\">\n                <div className=\"clock\">\n                    <div className=\"hand hour\" \n                        style={{transform: `translate(-50%) rotate(${clockState.hourRate * 360}deg)`}}>\n                    </div>\n                    <div className=\"hand minute\"\n                        style={{transform: `translate(-50%) rotate(${clockState.minuteRate * 360}deg)`}}>\n                    </div>\n                    <div className=\"hand second\"\n                        style={{transform: `translate(-50%) rotate(${clockState.secondRate * 360}deg)`}}>\n                    </div>\n\n                    <div className=\"number number1\">\n                        <div>1</div>\n                    </div>\n\n                    <div className=\"number number2\">\n                        <div>2</div>\n                    </div>\n\n                    <div className=\"number number3\">\n                        <div>3</div>\n                    </div>\n\n                    <div className=\"number number4\">\n                        <div>4</div>\n                    </div>\n\n                    <div className=\"number number5\">\n                        <div>5</div>\n                    </div>\n\n                    <div className=\"number number6\">\n                        <div>6</div>\n                    </div>\n\n                    <div className=\"number number7\">\n                        <div>7</div>\n                    </div>\n\n                    <div className=\"number number8\">\n                        <div>8</div>\n                    </div>\n\n                    <div className=\"number number9\">\n                        <div>9</div>\n                    </div>\n\n                    <div className=\"number number10\">\n                        <div>10</div>\n                    </div>\n\n                    <div className=\"number number11\">\n                        <div>11</div>\n                    </div>\n\n                    <div className=\"number number12\">\n                        <div>12</div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"bottom\">\n                <div>\n\n                    {handleOpenButton()}\n                    \n                </div>\n                <div className=\"addInfo\">\n                    <div>1:01:38 until break</div>\n                    <div>5:01:38 until close</div>\n                </div>\n\n                <div ref={ref}>\n                    \n                    <div className=\"oval2\" onClick={handleClick}>Show Open/Close Hours</div>\n\n                    <Overlay show={show} target={target} placement=\"top\" containerPadding={20}>\n                        <Popover id=\"popover-contained\">\n                            <Popover.Content>\n\n                                <div class=\"contentBox\">\n                                    <div class=\"shedule\">\n                                        <div>{cityName.toUpperCase()} TIME</div>\n                                        <div>{openHoursOne}</div>\n                                    </div>\n                                    <div class=\"shedule\">\n                                        <div>LOCAL TIME</div>\n                                        <div>{`${localTime['hoursFrom']}:00 - ${localTime['hoursTo']}:00`}</div>\n                                    </div>  \n                                </div>\n                                \n                            </Popover.Content>\n                        </Popover>\n                    </Overlay>\n                </div>               \n            </div>            \n        </div>\n    )\n}\n\nexport default Clock; \n"]},"metadata":{},"sourceType":"module"}