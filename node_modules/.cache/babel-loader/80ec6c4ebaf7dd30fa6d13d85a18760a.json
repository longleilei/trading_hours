{"ast":null,"code":"import _objectSpread from\"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import ContinentDropdown from'../continentDropdown/ContinentDropdown';import GeoSelector from'../geoSelector/GeoSelector';import TimeSelector from'../timeSelector/TimeSelector';import*as Constants from'../../constants';import*as styles from'./AdminPanel.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AdminPanel=function AdminPanel(){//const initialFormData = { continent: '', country: '', city: '', timeSlotOne: {from: '', to: ''}, timeSlotTwo: {from: '', to: ''}}; \nvar _useState=useState({continent:'',country:'',city:'',utcoffset:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useState3=useState({from:'',to:''}),_useState4=_slicedToArray(_useState3,2),_timeSlotOne=_useState4[0],setTimeSlotOne=_useState4[1];var _useState5=useState({from:'',to:''}),_useState6=_slicedToArray(_useState5,2),_timeSlotTwo=_useState6[0],setTimeSlotTwo=_useState6[1];var postData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url){var info,bod,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:info={\"id\":\"\".concat(Math.floor(Math.random()*1000001)),\"continent\":formData.continent,\"country\":formData.country,\"city\":formData.city,\"utcoffset\":\"\".concat(formData.utcoffset*60),\"openHoursOne\":\"\".concat(_timeSlotOne.from,\"-\").concat(_timeSlotOne.to),\"openHoursTwo\":\"\".concat(_timeSlotTwo.from,\"-\").concat(_timeSlotTwo.to)};bod={\"id\":\"56100\",\"continent\":\"Europe\",\"country\":\"Ukraine\",\"city\":\"\",\"utcoffset\":\"+180\",\"openHoursOne\":\"15:00-17:00\",\"openHoursTwo\":\"\"};_context.next=4;return fetch(url,{method:'POST',mode:'cors',headers:{'Content-Type':'application/json'},body:JSON.stringify(info)});case 4:response=_context.sent;return _context.abrupt(\"return\",response.json());case 6:case\"end\":return _context.stop();}}},_callee);}));return function postData(_x){return _ref.apply(this,arguments);};}();var handlePost=function handlePost(){postData(Constants.POST_URL).then(function(data){return console.log(data);});};return/*#__PURE__*/_jsx(\"div\",{className:styles.mainContainer,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.contentBox,children:[/*#__PURE__*/_jsx(ContinentDropdown,{continent:function continent(selectedContinent){return setFormData(_objectSpread(_objectSpread({},formData),{},{continent:selectedContinent}));}}),/*#__PURE__*/_jsxs(\"div\",{className:styles.input,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.input,children:\"Choose country and region\"}),/*#__PURE__*/_jsx(GeoSelector,{geo:function geo(selectedGeo){return setFormData(_objectSpread(_objectSpread({},formData),{},{country:selectedGeo[0],city:selectedGeo[1]}));}})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.input,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.input,children:\"If there is more than one slot, input one more time slot of opening hours\"}),/*#__PURE__*/_jsx(TimeSelector,{timeSlotOne:function timeSlotOne(selectedTimeSlotOne){return setTimeSlotOne(_objectSpread(_objectSpread({},_timeSlotOne),{},{from:selectedTimeSlotOne[0],to:selectedTimeSlotOne[1]}));},timeSlotTwo:function timeSlotTwo(selectedTimeSlotTwo){return setTimeSlotTwo(_objectSpread(_objectSpread({},_timeSlotTwo),{},{from:selectedTimeSlotTwo[0],to:selectedTimeSlotTwo[1]}));}})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.input,children:[/*#__PURE__*/_jsx(\"div\",{children:\"Enter UTC offcet (consider inputing with (+/-) value)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"UTC offset\",onChange:function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},{utcoffset:e.target.value}));}})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.submitBox,children:/*#__PURE__*/_jsx(\"button\",{className:styles.submitBtn,onClick:handlePost,children:\"Submit\"})})]})});};export default AdminPanel;","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/adminPanel/AdminPanel.js"],"names":["React","useEffect","useState","ContinentDropdown","GeoSelector","TimeSelector","Constants","styles","AdminPanel","continent","country","city","utcoffset","formData","setFormData","from","to","timeSlotOne","setTimeSlotOne","timeSlotTwo","setTimeSlotTwo","postData","url","info","Math","floor","random","bod","fetch","method","mode","headers","body","JSON","stringify","response","json","handlePost","POST_URL","then","data","console","log","mainContainer","contentBox","selectedContinent","input","selectedGeo","selectedTimeSlotOne","selectedTimeSlotTwo","e","target","value","submitBox","submitBtn"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'; \n\n\nimport ContinentDropdown from '../continentDropdown/ContinentDropdown'; \nimport GeoSelector from '../geoSelector/GeoSelector';\nimport TimeSelector from '../timeSelector/TimeSelector'; \nimport * as Constants from '../../constants'; \nimport * as styles from './AdminPanel.module.scss'; \n\nconst AdminPanel = () => {\n\n    //const initialFormData = { continent: '', country: '', city: '', timeSlotOne: {from: '', to: ''}, timeSlotTwo: {from: '', to: ''}}; \n    const [ formData, setFormData ] = useState({ continent: '', country: '', city: '', utcoffset: ''}); \n    const [ timeSlotOne, setTimeSlotOne ] = useState({ from: '', to: ''}); \n    const [ timeSlotTwo, setTimeSlotTwo ] = useState({ from: '', to: ''}); \n\n    \n\n    const postData = async(url) => {\n\n        const info = {\n                    \"id\": `${Math.floor(Math.random() * 1000001)}`, \n                    \"continent\": formData.continent, \n                    \"country\": formData.country,\n                    \"city\": formData.city, \n                    \"utcoffset\": `${formData.utcoffset*60}`,\n                    \"openHoursOne\": `${timeSlotOne.from}-${timeSlotOne.to}`,\n                    \"openHoursTwo\": `${timeSlotTwo.from}-${timeSlotTwo.to}`\n                }\n\n        const bod = {\n            \"id\":\"56100\", \n            \"continent\": \"Europe\", \n            \"country\": \"Ukraine\",\n            \"city\": \"\", \n            \"utcoffset\":\"+180\",\n            \"openHoursOne\": \"15:00-17:00\",\n            \"openHoursTwo\": \"\"\n        }; \n\n        const response = await fetch(url, {\n            method: 'POST',\n            mode: 'cors',  \n            headers: { 'Content-Type': 'application/json' }, \n            body: JSON.stringify(info) \n        }); \n\n        return response.json(); \n\n    }\n\n    const handlePost = () => {\n        postData(Constants.POST_URL).then(data => console.log(data)); \n    }\n\n\n\n\n\n    return (\n        <div className={styles.mainContainer}>\n            <div className={styles.contentBox}>\n\n                <ContinentDropdown continent={selectedContinent => setFormData({...formData, continent: selectedContinent})}/>\n                \n                <div className={styles.input}>\n                    <div className={styles.input}>Choose country and region</div>\n                    <GeoSelector \n                        geo={selectedGeo => setFormData({...formData, country: selectedGeo[0], city: selectedGeo[1]})}/>\n                </div>\n\n                <div className={styles.input}>\n                    <div className={styles.input}>If there is more than one slot, input one more time slot of opening hours</div>\n                    <TimeSelector\n                        timeSlotOne={selectedTimeSlotOne => setTimeSlotOne({ ...timeSlotOne, from: selectedTimeSlotOne[0], to: selectedTimeSlotOne[1]})}\n                        timeSlotTwo={selectedTimeSlotTwo => setTimeSlotTwo({ ...timeSlotTwo, from: selectedTimeSlotTwo[0], to: selectedTimeSlotTwo[1]})}/>\n                </div>\n\n                <div className={styles.input}>\n                    <div>Enter UTC offcet (consider inputing with (+/-) value)</div>\n                    <input type=\"text\" placeholder=\"UTC offset\" onChange={e => setFormData({...formData, utcoffset: e.target.value })}/>\n                </div>\n\n                <div className={styles.submitBox}>\n                    <button className={styles.submitBtn} onClick={handlePost}>Submit</button>\n                </div>\n                \n            </div> \n        </div>\n    )\n}\n\nexport default AdminPanel; \n"]},"metadata":{},"sourceType":"module"}