{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/geoSelector/GeoSelector.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GeoSelector = () => {\n  _s();\n\n  const initialGeoState = {\n    country: '',\n    region: ''\n  };\n  const [geoState, setGeoState] = useState(initialGeoState);\n  const onChange = useCallback(e => {\n    setGeoState(geoState => ({ ...geoState,\n      [e.target.name]: e.target.value\n    }));\n  }, []); // const selectCountry = (val) => {\n  //     setGeoState({...setGeoState, country: val}); \n  // }\n  // const selectRegion = (val) => {\n  //     setGeoState({...setGeoState, geoState: val}); \n  //     console.log(geoState); \n  // }\n\n  const handleChange = e => {\n    setGeoState({ ...geoState,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(CountryDropdown, {\n        onChange: e => handleChange(e),\n        value: geoState.country,\n        name: geoState.country,\n        onChange: handleChange,\n        style: {\n          color: 'grey',\n          fontSize: '17px',\n          height: '40px'\n        } //handleChange={handleChange}\n        ,\n        children: geoState.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(RegionDropdown, {\n        onChange: e => handleChange(e),\n        country: geoState.country,\n        name: geoState.country,\n        onChange: handleChange,\n        value: geoState.region,\n        style: {\n          color: 'grey',\n          fontSize: '17px',\n          height: '40px',\n          boxShadow: 'grey'\n        },\n        blankOptionLabel: \"No country selected\",\n        defaultOptionLabel: \"Now select a region\" //onChange={value => selectRegion(value)}\n        //handleChange={handleChange}\n        ,\n        children: geoState.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GeoSelector, \"/taVucfUpvfwGPyRpZ99wmK6ba8=\");\n\n_c = GeoSelector;\nexport default GeoSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeoSelector\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/geoSelector/GeoSelector.js"],"names":["React","useState","useCallback","Form","CountryDropdown","RegionDropdown","CountryRegionData","GeoSelector","initialGeoState","country","region","geoState","setGeoState","onChange","e","target","name","value","handleChange","color","fontSize","height","boxShadow","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,QAAmE,+BAAnE;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAMC,eAAe,GAAG;AAAGC,IAAAA,OAAO,EAAE,EAAZ;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAAxB;AAEA,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BX,QAAQ,CAACO,eAAD,CAA1C;AAEA,QAAMK,QAAQ,GAAGX,WAAW,CACvBY,CAAD,IAAO;AACHF,IAAAA,WAAW,CAACD,QAAQ,KAAK,EAAC,GAAGA,QAAJ;AAAc,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAxC,KAAL,CAAT,CAAX;AACH,GAHuB,EAIxB,EAJwB,CAA5B,CANsB,CAatB;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,QAAMC,YAAY,GAAIJ,CAAD,IAAO;AACxBF,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAxC,KAAD,CAAX;AACH,GAFD;;AAOA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,8BAEA,QAAC,eAAD;AAAiB,QAAA,QAAQ,EAAGH,CAAD,IAAOI,YAAY,CAACJ,CAAD,CAA9C;AACI,QAAA,KAAK,EAAEH,QAAQ,CAACF,OADpB;AAEI,QAAA,IAAI,EAAEE,QAAQ,CAACF,OAFnB;AAGI,QAAA,QAAQ,EAAES,YAHd;AAII,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,QAAQ,EAAE,MAA3B;AAAmCC,UAAAA,MAAM,EAAE;AAA3C,SAJX,CAKI;AALJ;AAAA,kBAMMV,QAAQ,CAACF;AANf;AAAA;AAAA;AAAA;AAAA,cAFA,eAUA,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAGK,CAAD,IAAOI,YAAY,CAACJ,CAAD,CAA7C;AACI,QAAA,OAAO,EAAEH,QAAQ,CAACF,OADtB;AAEI,QAAA,IAAI,EAAEE,QAAQ,CAACF,OAFnB;AAGI,QAAA,QAAQ,EAAES,YAHd;AAII,QAAA,KAAK,EAAEP,QAAQ,CAACD,MAJpB;AAKI,QAAA,KAAK,EAAE;AAAES,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,QAAQ,EAAE,MAA3B;AAAmCC,UAAAA,MAAM,EAAE,MAA3C;AAAmDC,UAAAA,SAAS,EAAE;AAA9D,SALX;AAMI,QAAA,gBAAgB,EAAC,qBANrB;AAOI,QAAA,kBAAkB,EAAC,qBAPvB,CAQI;AACA;AATJ;AAAA,kBAUMX,QAAQ,CAACY;AAVf;AAAA;AAAA;AAAA;AAAA,cAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAxDD;;GAAMhB,W;;KAAAA,W;AA0DN,eAAeA,WAAf","sourcesContent":["import React, { useState, useCallback } from 'react'; \nimport Form from 'react-bootstrap/Form';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\n\nconst GeoSelector = () => {\n\n    const initialGeoState = {  country: '', region: '' }; \n\n    const [ geoState, setGeoState ] = useState(initialGeoState); \n\n    const onChange = useCallback(\n        (e) => {\n            setGeoState(geoState => ({...geoState, [e.target.name]: e.target.value}))\n        },\n        []\n    )\n\n    // const selectCountry = (val) => {\n    //     setGeoState({...setGeoState, country: val}); \n    // }\n\n    // const selectRegion = (val) => {\n    //     setGeoState({...setGeoState, geoState: val}); \n    //     console.log(geoState); \n    // }\n\n    const handleChange = (e) => {\n        setGeoState({...geoState, [e.target.name]: e.target.value }); \n    }\n\n\n   \n\n    return (\n        <div>\n            <Form>\n\n            <CountryDropdown onChange={(e) => handleChange(e)}\n                value={geoState.country}\n                name={geoState.country}\n                onChange={handleChange}\n                style={{ color: 'grey', fontSize: '17px', height: '40px'}}\n                //handleChange={handleChange}\n                >{geoState.country}</CountryDropdown>\n\n            <RegionDropdown onChange={(e) => handleChange(e)}\n                country={geoState.country}\n                name={geoState.country}\n                onChange={handleChange}\n                value={geoState.region}\n                style={{ color: 'grey', fontSize: '17px', height: '40px', boxShadow: 'grey'}}\n                blankOptionLabel=\"No country selected\"\n                defaultOptionLabel=\"Now select a region\"\n                //onChange={value => selectRegion(value)}\n                //handleChange={handleChange}\n                >{geoState.state}</RegionDropdown>   \n\n            </Form>    \n        </div>\n    )\n}\n\nexport default GeoSelector; \n"]},"metadata":{},"sourceType":"module"}