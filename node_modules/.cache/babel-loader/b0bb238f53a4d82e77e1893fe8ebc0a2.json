{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/clock/Clock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Overlay, Popover } from 'react-bootstrap';\nimport './Clock.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clock = ({\n  regionName,\n  cityName,\n  utcoffset,\n  openHoursOne,\n  openHoursTwo\n}) => {\n  _s();\n\n  const date = new Date();\n  const localUTC = date.getTimezoneOffset(); //let countryHours = openHoursOne.split('-'); \n  //let countryHoursTwo = openHoursTwo.split('-'); \n\n  let utcDiff = Math.abs(localUTC / 60) - utcoffset / 60;\n  let breakStatus = false;\n  let opHoursOne = '';\n  let opHoursTwo = '';\n  const initialState = {\n    secondRatio: 0,\n    minuteRatio: 0,\n    hourRatio: 0\n  };\n  const [clockState, setClockState] = useState(initialState);\n  const [time, setTime] = useState(0);\n  const [dayTimeStr, setDayTimeStr] = useState('');\n  const [hoursClosedFriday, setHoursClosedFriday] = useState(false);\n  const [hoursOpen, setHoursOpen] = useState(false); //for bs popup \n\n  const [show, setShow] = useState(false);\n  const [target, setTarget] = useState(null);\n  const ref = useRef(null);\n\n  const handleClick = event => {\n    setShow(!show);\n    setTarget(event.target);\n  };\n\n  const calculateUniversalUTC = () => {\n    //returns local date from where the app is used \n    let date = new Date(); //console.log(date); \n    //offcet taken at the place where app is used \n\n    let app_utc_offcet = date.getTimezoneOffset(); //returns -480 \n    //this is the abstract date according to UTC\n\n    date.setHours(date.getHours() + app_utc_offcet / 60); //console.log('ABSTRACT TIME', date); \n\n    return date;\n  };\n\n  const calculateCurrentLocalDate = () => {\n    let utcdate = calculateUniversalUTC(); //console.log(\"UTCDATE\" + utcdate); \n    //calculate time according to offcet of the country\n\n    utcdate.setHours(utcdate.getHours() + utcoffset / 60); //console.log('SHANGHAI TIME', utcdate); \n\n    return utcdate;\n  };\n\n  const formatDate = date => {\n    let d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    let year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  };\n\n  const checkSingleDigit = time => {\n    if (String(+time).charAt(0) == time) {\n      time = '0' + time;\n    }\n\n    return time;\n  };\n\n  const digitalClockConverter = date => {\n    //getting day of the week \n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'];\n    let dayNum = Number(date.getDay());\n    let stsDay = days[dayNum]; //getting hours in am/pm \n\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    let strTime = hours + ':' + minutes + ' ' + ampm;\n    let timeStr = stsDay + ' ' + strTime;\n    setDayTimeStr(dayTimeStr => timeStr);\n  };\n\n  const clockStateHandler = date => {\n    let secondRatio = date.getSeconds() / 60;\n    let minuteRatio = (secondRatio + date.getMinutes()) / 60;\n    let hourRatio = (minuteRatio + date.getHours()) / 12;\n    setClockState({ ...clockState,\n      secondRate: secondRatio,\n      minuteRate: minuteRatio,\n      hourRate: hourRatio\n    });\n  };\n\n  const clockHandler = () => {\n    let currentDate = calculateCurrentLocalDate();\n    clockStateHandler(currentDate);\n    digitalClockConverter(currentDate);\n  };\n\n  const calculateLocalTime = openHours => {\n    let hoursFrom = Number(openHours.split('-')[0].slice(0, 2)) + utcDiff;\n    let hoursTo = Number(openHours.split('-')[1].slice(0, 2)) + utcDiff;\n\n    if (hoursTo > 24) {\n      hoursTo = hoursTo % 24;\n    }\n\n    checkSingleDigit(hoursFrom);\n    checkSingleDigit(hoursTo);\n    return {\n      hoursFrom,\n      hoursTo\n    };\n  };\n\n  const calculateRemainingTime = endtime => {\n    let hourWithDiff = new Date().getHours() - utcDiff;\n    let date = new Date(); //let dateInCountry = ''; \n    //check if day in appRegion is the same as date in country\n    // if(date.getDate() === calculateCurrentLocalDate().getDate() ){\n    //     dateInCountry = `${date.toDateString()} ${Math.abs(hourWithDiff)}:${date.getMinutes()}:${date.getSeconds()}`; \n    // } else { \n    //     dateInCountry = `${calculateCurrentLocalDate().toDateString()} ${calculateCurrentLocalDate().getHours()}:${date.getMinutes()}:${date.getSeconds()}`;  \n    // }\n\n    let dateInCountry = `${calculateCurrentLocalDate().toDateString()} ${calculateCurrentLocalDate().getHours()}:${date.getMinutes()}:${date.getSeconds()}`; //let dateInCountry = `${date.toDateString()} ${Math.abs(hourWithDiff)}:${date.getMinutes()}:${date.getSeconds()}`; \n    //console.log(dateInCountry); \n    // console.log(endtime); \n\n    const total = Date.parse(endtime) - Date.parse(dateInCountry);\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / (1000 * 60 * 60) % 24);\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    return [days, checkSingleDigit(hours), checkSingleDigit(minutes), checkSingleDigit(seconds)];\n  };\n\n  const calculateUntilClose = () => {\n    let endtime = '';\n\n    if (openHoursOne && typeof openHoursTwo != 'undefined') {\n      if (opHoursTwo) {\n        let hTo = `${openHoursTwo.split('-')[1]}`; //dublication \n\n        const month = new Date().getUTCMonth() + 1;\n        const day = new Date().getUTCDate();\n        const year = new Date().getUTCFullYear();\n        endtime = new Date(year, month, day, hTo.slice(0, 2), 0, 0, 0);\n        const [ds, hs, ms, ss] = calculateRemainingTime(endtime);\n        return `${hs}:${ms}:${ss}`;\n      } else {\n        endtime = `${new Date()} ${openHoursOne.split('-')[1]}`;\n        const [ds, hs, ms, ss] = calculateRemainingTime(endtime);\n        return `${hs}:${ms}:${ss}`;\n      }\n    } else {\n      endtime = `${new Date()} ${openHoursOne.split('-')[1]}`; //11:30\n\n      const [ds, hs, ms, ss] = calculateRemainingTime(endtime);\n      return `${hs}:${ms}:${ss}`;\n    }\n  };\n\n  const calculateUntilOpen = () => {\n    let endtime = new Date(); //on Friday when it's closed already, we add + 2 days to get to Monday (get endtime)\n\n    if (hoursClosedFriday) {\n      const numberOfDaysToAdd = 3;\n      endtime.setDate(endtime.getDate() + numberOfDaysToAdd);\n    } else if (endtime.getDay() == 6) {\n      //check if Saturday \n      const numberOfDaysToAdd = 2;\n      endtime.setDate(endtime.getDate() + numberOfDaysToAdd);\n    } else {\n      const numberOfDaysToAdd = 1;\n      endtime.setDate(endtime.getDate() + numberOfDaysToAdd);\n    } //endtime = `${endtime.toDateString()} ${Number(countryHours[0].slice(0,2)) + utcDiff}${countryHours[0].slice(2,5)}:00`; \n\n\n    endtime = `${endtime.toDateString()} ${Number(openHoursOne.split('-')[0].slice(0, 2))}${openHoursOne.split('-')[0].slice(2, 5)}:00`;\n    const [ds, hs, ms, ss] = calculateRemainingTime(endtime);\n    return `${ds}d ${hs}:${ms}:${ss}`;\n  };\n\n  const calculateInBreak = () => {\n    if (openHoursTwo != 'undefined') {\n      const timeNow = calculateCurrentLocalDate();\n      let hoursOneTo = calculateLocalTime(openHoursOne)['hoursTo'];\n      let hoursTwoFrom = calculateLocalTime(openHoursTwo)['hoursFrom'];\n      let timeString = `${timeNow.getHours()}:${timeNow.getMinutes()}`;\n      let buttonStatus = '';\n      buttonStatus = timeString < `${hoursTwoFrom}:00` && timeString > `${hoursOneTo}:00` ? true : false;\n      return buttonStatus;\n    }\n\n    return 0;\n  };\n\n  const calculateUntilReopen = () => {\n    //get timeNow and endTime \n    const timeNow = calculateCurrentLocalDate();\n    let hoursTwoFrom = calculateLocalTime(openHoursTwo)['hoursFrom']; //create proper date objects for difference \n\n    const month = timeNow.getUTCMonth() + 1;\n    const day = timeNow.getUTCDate();\n    const year = timeNow.getUTCFullYear();\n    let hoursOneTo = new Date(year, month, day, hoursTwoFrom, 0, 0, 0);\n    let diff = hoursOneTo - timeNow;\n    const seconds = Math.floor(diff / 1000 % 60);\n    const minutes = Math.floor(diff / 1000 / 60 % 60);\n    const hours = Math.floor(diff / (1000 * 60 * 60) % 24);\n    return `${checkSingleDigit(hours)}:${checkSingleDigit(minutes)}:${checkSingleDigit(seconds)}`;\n  };\n\n  const handleOpenButton = () => {\n    //get current local time\n    let currentLocalTime = calculateCurrentLocalDate(); //console.log(currentLocalTime); \n\n    let formattedDate = formatDate(currentLocalTime);\n    const timeNow = new Date();\n    let startTime = openHoursOne.split('-')[0];\n    let endTime = openHoursOne.split('-')[1];\n    let startTimeTwo, endTimeTwo, startTimeObjTwo, endTimeObjTwo;\n\n    if (typeof openHoursTwo != 'undefined') {\n      startTimeTwo = openHoursTwo.split('-')[0];\n      endTimeTwo = openHoursTwo.split('-')[1];\n      startTimeObjTwo = new Date(`${formattedDate} ${startTimeTwo}`);\n      endTimeObjTwo = new Date(`${formattedDate} ${endTimeTwo}`);\n    }\n\n    let startTimeObj = new Date(`${formattedDate} ${startTime}`);\n    let endTimeObj = new Date(`${formattedDate} ${endTime}`);\n    let open = ''; //check if it's Saturday or Sunday \n\n    if (timeNow.getDay() == 6 || timeNow.getDay() == 0) {\n      open = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"oval red\",\n        children: \"Closed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }, this);\n    } else {\n      //check if openHoursTwo!=undefined => we have time with the break \n      //otherwise we have only open and close\n      if (openHoursOne && typeof openHoursTwo !== 'undefined') {\n        if (timeNow < endTimeObj && timeNow > startTimeObj || timeNow < endTimeObjTwo && timeNow > startTimeObjTwo) {\n          open = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"oval green\",\n            children: \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 29\n          }, this);\n          opHoursOne = true;\n\n          if (calculateInBreak()) {\n            open = /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"oval yellow\",\n              children: \"Break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }, this);\n            opHoursOne = false;\n            opHoursTwo = false;\n          }\n\n          if (timeNow < endTimeObjTwo && timeNow > startTimeObjTwo) {\n            opHoursTwo = true;\n          }\n        } else {\n          open = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"oval red\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 29\n          }, this);\n        }\n      } else if (openHoursTwo === 'undefined' || openHoursTwo === '0') {\n        console.log(\"\");\n        open = timeNow < endTimeObj && timeNow > startTimeObj ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"oval green\",\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"oval red\",\n          children: \"Closed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 20\n        }, this);\n      }\n    }\n\n    return open;\n  };\n\n  const checkUndefined = () => {};\n\n  useEffect(() => {\n    //console.log('CITYNAME', cityName); \n    const interval = setInterval(() => {\n      clockHandler();\n      setTime(Date.now());\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainFont\",\n        children: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"secondaryFont\",\n        children: regionName.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainFont\",\n        children: dayTimeStr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand hour\",\n          style: {\n            transform: `translate(-50%) rotate(${clockState.hourRate * 360}deg)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand minute\",\n          style: {\n            transform: `translate(-50%) rotate(${clockState.minuteRate * 360}deg)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand second\",\n          style: {\n            transform: `translate(-50%) rotate(${clockState.secondRate * 360}deg)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number7\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number9\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number10\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number11\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"11\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: handleOpenButton()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [opHoursOne || opHoursTwo ? `${calculateUntilClose()} until close` : `${calculateUntilOpen()} until open`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"oval2\",\n          onClick: handleClick,\n          children: \"Show Open/Close Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n          show: show,\n          target: target,\n          placement: \"top\",\n          containerPadding: 20,\n          children: /*#__PURE__*/_jsxDEV(Popover, {\n            id: \"popover-contained\",\n            children: /*#__PURE__*/_jsxDEV(Popover.Content, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"contentBox\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"shedule\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [cityName.toUpperCase(), \" TIME\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: openHoursOne\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 41\n                  }, this), (openHoursTwo != '0' || typeof openHoursTwo != 'undefined') && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: openHoursTwo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 105\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"shedule\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"LOCAL TIME\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: `${checkSingleDigit(calculateLocalTime(openHoursOne)['hoursFrom'])}:${openHoursOne.split('-')[0].slice(3, 5)} - ${checkSingleDigit(calculateLocalTime(openHoursOne)['hoursTo'])}:${openHoursOne.split('-')[1].slice(3, 5)}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 41\n                  }, this), openHoursTwo !== '0' && typeof openHoursTwo != 'undefined' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: `${checkSingleDigit(calculateLocalTime(openHoursTwo)['hoursFrom'])}:${openHoursOne.split('-')[0].slice(3, 5)} - ${checkSingleDigit(calculateLocalTime(openHoursTwo)['hoursTo'])}:${openHoursOne.split('-')[1].slice(3, 5)}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 42\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Clock, \"6pZKqi31YHDbl8jlq8JGqCIroOc=\");\n\n_c = Clock;\nexport default Clock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/clock/Clock.js"],"names":["React","useState","useEffect","useRef","Overlay","Popover","Clock","regionName","cityName","utcoffset","openHoursOne","openHoursTwo","date","Date","localUTC","getTimezoneOffset","utcDiff","Math","abs","breakStatus","opHoursOne","opHoursTwo","initialState","secondRatio","minuteRatio","hourRatio","clockState","setClockState","time","setTime","dayTimeStr","setDayTimeStr","hoursClosedFriday","setHoursClosedFriday","hoursOpen","setHoursOpen","show","setShow","target","setTarget","ref","handleClick","event","calculateUniversalUTC","app_utc_offcet","setHours","getHours","calculateCurrentLocalDate","utcdate","formatDate","d","month","getMonth","day","getDate","year","getFullYear","length","join","checkSingleDigit","String","charAt","digitalClockConverter","days","dayNum","Number","getDay","stsDay","hours","minutes","getMinutes","ampm","strTime","timeStr","clockStateHandler","getSeconds","secondRate","minuteRate","hourRate","clockHandler","currentDate","calculateLocalTime","openHours","hoursFrom","split","slice","hoursTo","calculateRemainingTime","endtime","hourWithDiff","dateInCountry","toDateString","total","parse","seconds","floor","calculateUntilClose","hTo","getUTCMonth","getUTCDate","getUTCFullYear","ds","hs","ms","ss","calculateUntilOpen","numberOfDaysToAdd","setDate","calculateInBreak","timeNow","hoursOneTo","hoursTwoFrom","timeString","buttonStatus","calculateUntilReopen","diff","handleOpenButton","currentLocalTime","formattedDate","startTime","endTime","startTimeTwo","endTimeTwo","startTimeObjTwo","endTimeObjTwo","startTimeObj","endTimeObj","open","console","log","checkUndefined","interval","setInterval","now","clearInterval","toUpperCase","transform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'; \nimport { Overlay, Popover } from 'react-bootstrap';\n\nimport './Clock.css'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nconst Clock = ({ regionName, cityName, utcoffset, openHoursOne, openHoursTwo }) => {\n\n    const date = new Date;\n    const localUTC = date.getTimezoneOffset();\n    //let countryHours = openHoursOne.split('-'); \n    //let countryHoursTwo = openHoursTwo.split('-'); \n    let utcDiff = Math.abs(localUTC/60) - (utcoffset/60); \n    let breakStatus = false; \n    let opHoursOne = ''; \n    let opHoursTwo = ''; \n    \n\n    const initialState = { secondRatio: 0, minuteRatio: 0, hourRatio: 0 }; \n    \n    const [ clockState, setClockState ] = useState(initialState);\n    const [ time, setTime ] = useState(0);  \n    const [ dayTimeStr, setDayTimeStr ] = useState('');\n    const [ hoursClosedFriday, setHoursClosedFriday ] = useState(false); \n    const [ hoursOpen, setHoursOpen ] = useState(false); \n    \n\n    //for bs popup \n    const [show, setShow] = useState(false);\n    const [target, setTarget] = useState(null);\n    const ref = useRef(null);\n\n    \n    \n    const handleClick = (event) => {\n        setShow(!show);\n        setTarget(event.target);\n    };\n\n\n    const calculateUniversalUTC = () => {\n\n        //returns local date from where the app is used \n        let date = new Date;    \n        //console.log(date); \n    \n        //offcet taken at the place where app is used \n        let app_utc_offcet = date.getTimezoneOffset(); //returns -480 \n\n        //this is the abstract date according to UTC\n        date.setHours(date.getHours() + (app_utc_offcet/60)); \n        //console.log('ABSTRACT TIME', date); \n\n        return date; \n    }\n\n    const calculateCurrentLocalDate = () => {\n\n        let utcdate = calculateUniversalUTC(); \n        //console.log(\"UTCDATE\" + utcdate); \n\n        //calculate time according to offcet of the country\n        utcdate.setHours(utcdate.getHours() + (utcoffset/60)); \n        //console.log('SHANGHAI TIME', utcdate); \n\n        return utcdate; \n\n    }\n\n    const formatDate = (date) => {\n        let d = new Date(date); \n\n        let month = '' + (d.getMonth() + 1);\n        let day = '' + d.getDate();\n        let year = d.getFullYear();\n\n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n\n        return [year, month, day].join('-');\n    }\n\n    const checkSingleDigit = (time) => {\n        if(String(+time).charAt(0) == time){\n            time = '0' + time; \n        }\n        return time; \n    }\n\n\n\n    const digitalClockConverter = (date) => {\n\n        \n        //getting day of the week \n        const days = ['Sun','Mon','Tue','Wed','Thur','Fri','Sat'];\n        let dayNum = Number(date.getDay()); \n        let stsDay = days[dayNum]; \n        \n\n        //getting hours in am/pm \n        let hours = date.getHours();\n        let minutes = date.getMinutes();\n        let ampm = hours >= 12 ? 'PM' : 'AM';\n        hours = hours % 12;\n        hours = hours ? hours : 12; \n        minutes = minutes < 10 ? '0'+minutes : minutes;\n        let strTime = hours + ':' + minutes + ' ' + ampm;\n        \n        let timeStr = stsDay + ' ' + strTime;\n\n        setDayTimeStr( dayTimeStr => timeStr); \n        \n    } \n  \n\n    const clockStateHandler = (date) => {\n        \n        let secondRatio = date.getSeconds() / 60; \n        let minuteRatio = (secondRatio + date.getMinutes()) / 60; \n        let hourRatio = (minuteRatio + date.getHours()) / 12;  \n    \n        setClockState({...clockState, secondRate: secondRatio, minuteRate: minuteRatio, hourRate: hourRatio});\n\n    }\n\n    const clockHandler = () => {\n\n        \n        let currentDate = calculateCurrentLocalDate(); \n    \n        clockStateHandler(currentDate); \n        digitalClockConverter(currentDate);\n\n\n    }\n\n    const calculateLocalTime = (openHours) => {\n\n\n        let hoursFrom = Number(openHours.split('-')[0].slice(0,2)) + utcDiff; \n        let hoursTo = Number(openHours.split('-')[1].slice(0,2)) + utcDiff;\n        \n        \n        if(hoursTo > 24){\n            hoursTo = hoursTo%24; \n        }\n\n        checkSingleDigit(hoursFrom); \n        checkSingleDigit(hoursTo); \n        \n        return { hoursFrom, hoursTo }; \n        \n    }\n\n    const calculateRemainingTime = (endtime) => {\n        \n        let hourWithDiff = new Date().getHours()-utcDiff; \n        let date = new Date(); \n\n        //let dateInCountry = ''; \n\n        //check if day in appRegion is the same as date in country\n        // if(date.getDate() === calculateCurrentLocalDate().getDate() ){\n        //     dateInCountry = `${date.toDateString()} ${Math.abs(hourWithDiff)}:${date.getMinutes()}:${date.getSeconds()}`; \n        // } else { \n        //     dateInCountry = `${calculateCurrentLocalDate().toDateString()} ${calculateCurrentLocalDate().getHours()}:${date.getMinutes()}:${date.getSeconds()}`;  \n        // }\n\n        let dateInCountry = `${calculateCurrentLocalDate().toDateString()} ${calculateCurrentLocalDate().getHours()}:${date.getMinutes()}:${date.getSeconds()}`;  \n\n\n        //let dateInCountry = `${date.toDateString()} ${Math.abs(hourWithDiff)}:${date.getMinutes()}:${date.getSeconds()}`; \n        //console.log(dateInCountry); \n        // console.log(endtime); \n\n        const total = Date.parse(endtime) - Date.parse(dateInCountry);\n        const seconds = Math.floor( (total/1000) % 60 );\n        const minutes = Math.floor( (total/1000/60) % 60 );\n        const hours = Math.floor( (total/(1000*60*60)) % 24 );\n        const days = Math.floor( total/(1000*60*60*24) );\n\n        return [days,checkSingleDigit(hours),checkSingleDigit(minutes),checkSingleDigit(seconds)]; \n    }\n\n    const calculateUntilClose = () => {\n\n        let endtime = ''; \n\n\n        if(openHoursOne && typeof openHoursTwo != 'undefined'){\n            if(opHoursTwo){\n                let hTo = `${openHoursTwo.split('-')[1]}`;\n\n                //dublication \n                const month = new Date().getUTCMonth() + 1; \n                const day = new Date().getUTCDate();\n                const year = new Date().getUTCFullYear();\n\n                endtime = new Date(year, month, day, hTo.slice(0,2), 0, 0, 0); \n                const [ds, hs, ms, ss] = calculateRemainingTime(endtime); \n                return `${hs}:${ms}:${ss}`; \n            } else {\n                endtime = `${new Date()} ${openHoursOne.split('-')[1]}`;\n                const [ds, hs, ms, ss] = calculateRemainingTime(endtime); \n                return `${hs}:${ms}:${ss}`; \n            }\n\n\n        } else { \n            endtime = `${new Date()} ${openHoursOne.split('-')[1]}`; //11:30\n            const [ds, hs, ms, ss] = calculateRemainingTime(endtime); \n            return `${hs}:${ms}:${ss}`; \n            \n\n        }\n\n    }\n    \n\n    const calculateUntilOpen = () => {\n\n        let endtime = new Date(); \n\n        //on Friday when it's closed already, we add + 2 days to get to Monday (get endtime)\n        if(hoursClosedFriday){\n            const numberOfDaysToAdd = 3;\n            endtime.setDate(endtime.getDate() + numberOfDaysToAdd); \n        } else if (endtime.getDay() == 6){ //check if Saturday \n            const numberOfDaysToAdd = 2;\n            endtime.setDate(endtime.getDate() + numberOfDaysToAdd); \n        } else{ \n            const numberOfDaysToAdd = 1;\n            endtime.setDate(endtime.getDate() + numberOfDaysToAdd); \n        }  \n\n        //endtime = `${endtime.toDateString()} ${Number(countryHours[0].slice(0,2)) + utcDiff}${countryHours[0].slice(2,5)}:00`; \n        endtime = `${endtime.toDateString()} ${Number(openHoursOne.split('-')[0].slice(0,2))}${openHoursOne.split('-')[0].slice(2,5)}:00`; \n\n\n        const [ds, hs, ms, ss] = calculateRemainingTime(endtime); \n\n        return `${ds}d ${hs}:${ms}:${ss}`; \n\n\n    }\n\n    const calculateInBreak = () => {\n\n        if(openHoursTwo != 'undefined'){\n            const timeNow = calculateCurrentLocalDate(); \n            let hoursOneTo = calculateLocalTime(openHoursOne)['hoursTo']; \n            let hoursTwoFrom = calculateLocalTime(openHoursTwo)['hoursFrom']; \n            let timeString = `${timeNow.getHours()}:${timeNow.getMinutes()}`; \n            \n            let buttonStatus = ''; \n    \n            buttonStatus = timeString < `${hoursTwoFrom}:00` && timeString > `${hoursOneTo}:00` \n            ? true : false; \n    \n            return buttonStatus; \n        }\n\n        return 0; \n\n        \n    }\n\n    const calculateUntilReopen = () => {\n\n \n        //get timeNow and endTime \n        const timeNow = calculateCurrentLocalDate();\n        let hoursTwoFrom = calculateLocalTime(openHoursTwo)['hoursFrom']; \n       \n        //create proper date objects for difference \n        const month = timeNow.getUTCMonth() + 1; \n        const day = timeNow.getUTCDate();\n        const year = timeNow.getUTCFullYear();\n\n\n        let hoursOneTo = new Date(year, month, day, hoursTwoFrom, 0, 0, 0); \n        let diff = hoursOneTo - timeNow; \n\n        const seconds = Math.floor( (diff/1000) % 60 );\n        const minutes = Math.floor( (diff/1000/60) % 60 );\n        const hours = Math.floor( (diff/(1000*60*60)) % 24 );\n\n        return `${checkSingleDigit(hours)}:${checkSingleDigit(minutes)}:${checkSingleDigit(seconds)}`; \n\n    }\n\n  \n\n    const handleOpenButton = () => {\n\n        //get current local time\n        let currentLocalTime = calculateCurrentLocalDate(); \n        //console.log(currentLocalTime); \n\n        let formattedDate = formatDate(currentLocalTime); \n        \n        const timeNow = new Date(); \n        \n        \n        let startTime = openHoursOne.split('-')[0]; \n        let endTime = openHoursOne.split('-')[1]; \n\n        let startTimeTwo, endTimeTwo, startTimeObjTwo, endTimeObjTwo; \n\n        if(typeof openHoursTwo != 'undefined'){\n            startTimeTwo = openHoursTwo.split('-')[0]; \n            endTimeTwo = openHoursTwo.split('-')[1];\n            startTimeObjTwo = new Date(`${formattedDate} ${startTimeTwo}`); \n            endTimeObjTwo = new Date(`${formattedDate} ${endTimeTwo}`);\n        }\n        \n\n\n        let startTimeObj = new Date(`${formattedDate} ${startTime}`); \n        let endTimeObj = new Date(`${formattedDate} ${endTime}`);\n       \n\n        let open = ''; \n\n        //check if it's Saturday or Sunday \n        if(timeNow.getDay() == 6 || timeNow.getDay() == 0){\n            open = (<div className=\"oval red\">Closed</div>); \n\n        } else {\n            //check if openHoursTwo!=undefined => we have time with the break \n            //otherwise we have only open and close\n            if(openHoursOne && (typeof openHoursTwo !== 'undefined')){\n                if((timeNow < endTimeObj && timeNow > startTimeObj) || (timeNow < endTimeObjTwo && timeNow > startTimeObjTwo)){\n                    open = (<div className=\"oval green\">Open</div>); \n                    opHoursOne = true; \n\n                    if(calculateInBreak()){\n                        open = (<div className=\"oval yellow\">Break</div>) \n                        opHoursOne = false;\n                        opHoursTwo = false; \n                    }\n \n                    if((timeNow < endTimeObjTwo && timeNow > startTimeObjTwo)){\n                        opHoursTwo = true;\n                    }\n                } else {\n                    open = (<div className=\"oval red\">Close</div>) \n                }\n            } else if((openHoursTwo === 'undefined') || (openHoursTwo === '0')){\n                console.log(\"\")\n                open = timeNow < endTimeObj && timeNow > startTimeObj \n                ? (<div className=\"oval green\">Open</div>) \n                : (<div className=\"oval red\">Closed</div>); \n            }\n\n\n        }\n            \n         \n        return open;  \n    }\n    const checkUndefined = () => {\n\n    }\n\n     \n    useEffect(() => {\n        //console.log('CITYNAME', cityName); \n        const interval = setInterval(() => {\n            clockHandler();\n            setTime(Date.now())    \n        }, 1000); \n       \n        return () => {\n            clearInterval(interval);\n        };\n    \n        \n    }, [time]); \n\n\n\n    return (\n        <div className=\"mainContainer\">\n            <div className=\"top\">\n                <div className=\"mainFont\">{cityName}</div>\n                <div className=\"secondaryFont\">{regionName.toUpperCase()}</div>\n                <div className=\"mainFont\">{dayTimeStr}</div>\n            </div>\n\n            <div className=\"middle\">\n                <div className=\"clock\">\n                    <div className=\"hand hour\" \n                        style={{transform: `translate(-50%) rotate(${clockState.hourRate * 360}deg)`}}>\n                    </div>\n                    <div className=\"hand minute\"\n                        style={{transform: `translate(-50%) rotate(${clockState.minuteRate * 360}deg)`}}>\n                    </div>\n                    <div className=\"hand second\"\n                        style={{transform: `translate(-50%) rotate(${clockState.secondRate * 360}deg)`}}>\n                    </div>\n\n                    <div className=\"number number1\">\n                        <div>1</div>\n                    </div>\n\n                    <div className=\"number number2\">\n                        <div>2</div>\n                    </div>\n\n                    <div className=\"number number3\">\n                        <div>3</div>\n                    </div>\n\n                    <div className=\"number number4\">\n                        <div>4</div>\n                    </div>\n\n                    <div className=\"number number5\">\n                        <div>5</div>\n                    </div>\n\n                    <div className=\"number number6\">\n                        <div>6</div>\n                    </div>\n\n                    <div className=\"number number7\">\n                        <div>7</div>\n                    </div>\n\n                    <div className=\"number number8\">\n                        <div>8</div>\n                    </div>\n\n                    <div className=\"number number9\">\n                        <div>9</div>\n                    </div>\n\n                    <div className=\"number number10\">\n                        <div>10</div>\n                    </div>\n\n                    <div className=\"number number11\">\n                        <div>11</div>\n                    </div>\n\n                    <div className=\"number number12\">\n                        <div>12</div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"bottom\">\n                <div>\n\n                    {handleOpenButton()}\n\n                </div>\n                <div className=\"addInfo\">\n                    {/* {breakStatus ? <div>{calculateUntilReopen()} until re-open</div> : <div>{calculateUntilOpen()} until open</div>} */}\n                    \n                    <div>{ (opHoursOne || opHoursTwo) ? (`${calculateUntilClose()} until close`) : (`${calculateUntilOpen()} until open`)} </div>\n                </div>\n\n                <div ref={ref}>\n                    \n                    <div className=\"oval2\" onClick={handleClick}>Show Open/Close Hours</div>\n\n                    <Overlay show={show} target={target} placement=\"top\" containerPadding={20}>\n                        <Popover id=\"popover-contained\">\n                            <Popover.Content>\n\n                                <div class=\"contentBox\">\n                                    <div class=\"shedule\">\n                                        <div>{cityName.toUpperCase()} TIME</div>\n                                        <div>{openHoursOne}</div>\n                                        {(openHoursTwo != '0'|| typeof openHoursTwo != 'undefined') && (<div>{openHoursTwo}</div>)}\n                                    </div>\n                                    <div class=\"shedule\">\n                                        <div>LOCAL TIME</div>\n                                        <div>{`${checkSingleDigit(calculateLocalTime(openHoursOne)['hoursFrom'])}:${openHoursOne.split('-')[0].slice(3,5)} - ${checkSingleDigit(calculateLocalTime(openHoursOne)['hoursTo'])}:${openHoursOne.split('-')[1].slice(3,5)}`}</div>\n                                        {((openHoursTwo !== '0') && (typeof openHoursTwo != 'undefined')) ? \n                                        (<div>{`${checkSingleDigit(calculateLocalTime(openHoursTwo)['hoursFrom'])}:${openHoursOne.split('-')[0].slice(3,5)} - ${checkSingleDigit(calculateLocalTime(openHoursTwo)['hoursTo'])}:${openHoursOne.split('-')[1].slice(3,5)}`}</div>) : null}\n                                    </div>  \n                                </div>\n                                \n                            </Popover.Content>\n                        </Popover>\n                    </Overlay>\n                </div>               \n            </div>            \n        </div>\n    )\n}\n\nexport default Clock; \n"]},"metadata":{},"sourceType":"module"}