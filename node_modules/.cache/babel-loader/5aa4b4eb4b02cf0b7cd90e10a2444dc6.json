{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/regionBox/RegionBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as styles from './RegionBox.module.scss';\nimport { AiFillMinusCircle } from 'react-icons/ai';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport Clock from '../clock/Clock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegionBox = ({\n  continentName\n}) => {\n  _s();\n\n  const initialState = {\n    secondRatio: 0,\n    minuteRatio: 0,\n    hourRatio: 0\n  };\n  const [clockState, setClockState] = useState(initialState);\n  const [time, setTime] = useState(0);\n  const [show, setShow] = useState(true);\n\n  const showHandler = () => {\n    setShow(show => !show);\n  }; //need to optimize this part \n\n\n  const renderByContinent = continentName => {\n    const asia = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.clockBoxes,\n      children: [/*#__PURE__*/_jsxDEV(Clock, {\n        secondRatio: clockState.secondRate,\n        minuteRatio: clockState.minuteRate,\n        hourRatio: clockState.hourRate,\n        regionName: 'China',\n        cityName: 'Shanghai'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Clock, {\n        secondRatio: clockState.secondRate,\n        minuteRatio: clockState.minuteRate,\n        hourRatio: clockState.hourRate,\n        regionName: 'China SAR',\n        cityName: 'Hong Kong'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this);\n\n    const europe = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.clockBoxes,\n      children: [/*#__PURE__*/_jsxDEV(Clock, {\n        secondRatio: clockState.secondRate,\n        minuteRatio: clockState.minuteRate,\n        hourRatio: clockState.hourRate,\n        regionName: 'Netherlands',\n        cityName: 'Amsterdam'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Clock, {\n        secondRatio: clockState.secondRate,\n        minuteRatio: clockState.minuteRate,\n        hourRatio: clockState.hourRate,\n        regionName: 'Belgium',\n        cityName: 'Brussels'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Clock, {\n        secondRatio: clockState.secondRate,\n        minuteRatio: clockState.minuteRate,\n        hourRatio: clockState.hourRate,\n        regionName: 'France',\n        cityName: 'Paris'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Clock, {\n        secondRatio: clockState.secondRate,\n        minuteRatio: clockState.minuteRate,\n        hourRatio: clockState.hourRate,\n        regionName: 'United Kingdom',\n        cityName: 'London'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this);\n\n    const southAmerica = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.clockBoxes,\n      children: [/*#__PURE__*/_jsxDEV(Clock, {\n        secondRatio: clockState.secondRate,\n        minuteRatio: clockState.minuteRate,\n        hourRatio: clockState.hourRate,\n        regionName: 'Argentina',\n        cityName: 'Buenos Aires'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Clock, {\n        secondRatio: clockState.secondRate,\n        minuteRatio: clockState.minuteRate,\n        hourRatio: clockState.hourRate,\n        regionName: 'Brazil',\n        cityName: 'San Paulo'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Clock, {\n        secondRatio: clockState.secondRate,\n        minuteRatio: clockState.minuteRate,\n        hourRatio: clockState.hourRate,\n        regionName: 'Chile',\n        cityName: 'Santiago'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }, this);\n\n    const northAmerica = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.clockBoxes,\n      children: [/*#__PURE__*/_jsxDEV(Clock, {\n        secondRatio: clockState.secondRate,\n        minuteRatio: clockState.minuteRate,\n        hourRatio: clockState.hourRate,\n        regionName: 'USA',\n        cityName: 'New York'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Clock, {\n        secondRatio: clockState.secondRate,\n        minuteRatio: clockState.minuteRate,\n        hourRatio: clockState.hourRate,\n        regionName: 'Canada',\n        cityName: 'Toronto'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }, this);\n\n    switch (continentName) {\n      case 'Asia':\n        return asia;\n\n      case 'Europe':\n        return europe;\n\n      case 'South America':\n        return southAmerica;\n\n      case 'North America':\n        return northAmerica;\n\n      default:\n        return 0;\n    }\n  };\n\n  const configureTimeInCity = () => {\n    const date = new Date();\n    let utc_offcet = date.getTimezoneOffset(); //offset is +8 from UTC\n\n    date.setMinutes(date.getMinutes() + utc_offcet); //for Amsterdam UTC+2\n\n    const amsterdamOffcet = 2 * 60;\n    date.setMinutes(date.getMinutes() + amsterdamOffcet);\n    console.log('DATE', date);\n    return date;\n  };\n\n  const clockHandler = () => {\n    let currentDate = configureTimeInCity(); //console.log(currentDate); \n\n    let secondRatio = currentDate.getSeconds() / 60;\n    let minuteRatio = (secondRatio + currentDate.getMinutes()) / 60;\n    let hourRatio = (minuteRatio + currentDate.getHours()) / 12;\n    setClockState({ ...clockState,\n      secondRate: secondRatio\n    });\n    setClockState({ ...clockState,\n      minuteRate: minuteRatio\n    });\n    setClockState({ ...clockState,\n      hourRate: hourRatio\n    });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      clockHandler();\n      setTime(Date.now());\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.regionBox,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.greyStripe,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.left,\n        children: continentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.right,\n        children: show ? /*#__PURE__*/_jsxDEV(AiFillMinusCircle, {\n          onClick: showHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(AiFillPlusCircle, {\n          onClick: showHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), show && renderByContinent(continentName)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegionBox, \"HY+uo/5Bl4HgUoJq3fzP27TSktU=\");\n\n_c = RegionBox;\nexport default RegionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegionBox\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/regionBox/RegionBox.js"],"names":["React","useState","useEffect","styles","AiFillMinusCircle","AiFillPlusCircle","Clock","RegionBox","continentName","initialState","secondRatio","minuteRatio","hourRatio","clockState","setClockState","time","setTime","show","setShow","showHandler","renderByContinent","asia","clockBoxes","secondRate","minuteRate","hourRate","europe","southAmerica","northAmerica","configureTimeInCity","date","Date","utc_offcet","getTimezoneOffset","setMinutes","getMinutes","amsterdamOffcet","console","log","clockHandler","currentDate","getSeconds","getHours","interval","setInterval","now","clearInterval","regionBox","greyStripe","left","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport * as styles from './RegionBox.module.scss'; \nimport { AiFillMinusCircle } from 'react-icons/ai'; \nimport { AiFillPlusCircle } from 'react-icons/ai'; \n\nimport Clock from '../clock/Clock'; \n\n\n\nconst RegionBox = ({ continentName }) => {\n\n    const initialState = { secondRatio: 0, minuteRatio: 0, hourRatio: 0 }; \n\n    const [ clockState, setClockState ] = useState(initialState);\n    const [ time, setTime ] = useState(0);  \n    const [ show, setShow ] = useState(true); \n\n    const showHandler = () => {\n        setShow(show => !show ); \n    }\n\n    //need to optimize this part \n    const renderByContinent = (continentName) =>{\n        const asia  = \n        (<div className={styles.clockBoxes}>   \n            <Clock \n                secondRatio={clockState.secondRate}\n                minuteRatio={clockState.minuteRate}\n                hourRatio={clockState.hourRate}\n                regionName={'China'}\n                cityName={'Shanghai'}\n            />\n            <Clock \n                secondRatio={clockState.secondRate}\n                minuteRatio={clockState.minuteRate}\n                hourRatio={clockState.hourRate}\n                regionName={'China SAR'}\n                cityName={'Hong Kong'}\n            />\n        </div>); \n\n        const europe = \n        (<div className={styles.clockBoxes}>   \n            <Clock \n                secondRatio={clockState.secondRate}\n                minuteRatio={clockState.minuteRate}\n                hourRatio={clockState.hourRate}\n                regionName={'Netherlands'}\n                cityName={'Amsterdam'}\n            />\n            <Clock \n                secondRatio={clockState.secondRate}\n                minuteRatio={clockState.minuteRate}\n                hourRatio={clockState.hourRate}\n                regionName={'Belgium'}\n                cityName={'Brussels'}\n            />\n            <Clock \n                secondRatio={clockState.secondRate}\n                minuteRatio={clockState.minuteRate}\n                hourRatio={clockState.hourRate}\n                regionName={'France'}\n                cityName={'Paris'}\n            />\n            <Clock \n                secondRatio={clockState.secondRate}\n                minuteRatio={clockState.minuteRate}\n                hourRatio={clockState.hourRate}\n                regionName={'United Kingdom'}\n                cityName={'London'}\n            />\n        </div>); \n\n        const southAmerica = \n        (<div className={styles.clockBoxes}>   \n            <Clock \n                secondRatio={clockState.secondRate}\n                minuteRatio={clockState.minuteRate}\n                hourRatio={clockState.hourRate}\n                regionName={'Argentina'}\n                cityName={'Buenos Aires'}\n            />\n            <Clock \n                secondRatio={clockState.secondRate}\n                minuteRatio={clockState.minuteRate}\n                hourRatio={clockState.hourRate}\n                regionName={'Brazil'}\n                cityName={'San Paulo'}\n            />\n            <Clock \n                secondRatio={clockState.secondRate}\n                minuteRatio={clockState.minuteRate}\n                hourRatio={clockState.hourRate}\n                regionName={'Chile'}\n                cityName={'Santiago'}\n            />\n            \n        </div>); \n\n        const northAmerica = \n        (<div className={styles.clockBoxes}>   \n            <Clock \n                secondRatio={clockState.secondRate}\n                minuteRatio={clockState.minuteRate}\n                hourRatio={clockState.hourRate}\n                regionName={'USA'}\n                cityName={'New York'}\n            />\n            <Clock \n                secondRatio={clockState.secondRate}\n                minuteRatio={clockState.minuteRate}\n                hourRatio={clockState.hourRate}\n                regionName={'Canada'}\n                cityName={'Toronto'}\n            />\n            \n            \n        </div>); \n        \n        \n        switch(continentName){\n            case 'Asia': \n                return asia; \n            case 'Europe': \n                return europe; \n            case 'South America': \n                return southAmerica; \n            case 'North America':\n                return northAmerica; \n            default: \n                return 0; \n        }\n    }\n\n    const configureTimeInCity = () => {\n        const date = new Date;\n\n        let utc_offcet = date.getTimezoneOffset(); //offset is +8 from UTC\n        date.setMinutes(date.getMinutes() + utc_offcet); \n \n\n        //for Amsterdam UTC+2\n        const amsterdamOffcet = 2*60; \n        date.setMinutes(date.getMinutes() + amsterdamOffcet); \n        console.log('DATE', date);\n        return date; \n\n    }\n\n\n    const clockHandler = () => {\n\n        let currentDate = configureTimeInCity(); \n        //console.log(currentDate); \n        \n        let secondRatio = currentDate.getSeconds() / 60; \n        let minuteRatio = (secondRatio + currentDate.getMinutes()) / 60; \n        let hourRatio = (minuteRatio + currentDate.getHours()) / 12;  \n\n        setClockState({...clockState, secondRate: secondRatio});\n        setClockState({ ...clockState, minuteRate: minuteRatio });\n        setClockState({ ...clockState, hourRate: hourRatio }); \n       \n\n    }\n\n    useEffect(() => {\n\n        const interval = setInterval(() => {\n            clockHandler();\n            setTime(Date.now())    \n        }, 1000); \n       \n        return () => {\n            clearInterval(interval);\n        };\n\n        \n    }, [time]); \n\n   \n    return (\n        <div className={styles.regionBox}>\n            <div className={styles.greyStripe}>\n                <div className={styles.left}>{continentName}</div>\n                <div className={styles.right}>\n                    {show ?  \n                        <AiFillMinusCircle onClick={showHandler}/> : \n                        <AiFillPlusCircle onClick={showHandler}/>\n                    }\n                    \n                    \n                </div>\n            </div>\n            { show && renderByContinent(continentName)}\n            \n        </div>\n    )\n}\n\nexport default RegionBox; \n"]},"metadata":{},"sourceType":"module"}