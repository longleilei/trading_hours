{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/regionBox/RegionBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as styles from './RegionBox.module.scss';\nimport { AiFillMinusCircle } from 'react-icons/ai';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport Clock from '../clock/Clock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegionBox = ({\n  continentName,\n  data\n}) => {\n  _s();\n\n  const [show, setShow] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(data);\n\n  const showHandler = () => {\n    setShow(show => !show);\n  }; //need to optimize this part \n\n\n  const renderByContinent = continentName => {\n    var myArray = ['a', 1, 'a', 2, '1'];\n    var unique = myArray.filter((v, i, a) => a.indexOf(v) === i);\n    let europe = [];\n    let asia = [];\n    let southAmerica = [];\n    let northAmerica = [];\n    data.forEach(d => {\n      if (d.continent === 'Europe') {\n        europe.push(d);\n      } else if (d.continent === 'Asia') {\n        asia.push(d);\n      } else if (d.continent == 'South America') {\n        southAmerica.push(d);\n      } else if (d.continent == 'South America') {\n        northAmerica.push(d);\n      }\n    }); //for europe \n\n    let eur = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.clockBoxes,\n      children: europe.map(el => /*#__PURE__*/_jsxDEV(Clock, {\n        id: el['id'],\n        regionName: el['country'],\n        cityName: el['city']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 20\n    }, this); //for asia \n\n\n    let as = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.clockBoxes,\n      children: asia.map(el => /*#__PURE__*/_jsxDEV(Clock, {\n        id: el['id'],\n        regionName: el['country'],\n        cityName: el['city']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this); // (<div className={styles.clockBoxes}>   \n    //     {/* <Clock \n    //         regionName={europe[0]}\n    //         cityName={europe[0]}\n    //     /> */}\n    //     <Clock \n    //         regionName={'Belgium'}\n    //         cityName={'Brussels'}\n    //     />\n    //     <Clock  \n    //         regionName={'France'}\n    //         cityName={'Paris'}\n    //     />\n    //     <Clock \n    //         regionName={'United Kingdom'}\n    //         cityName={'London'}\n    //     />\n    // </div>); \n    // const southAmerica = \n    // (<div className={styles.clockBoxes}>   \n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Argentina'}\n    //         cityName={'Buenos Aires'}\n    //     />\n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Brazil'}\n    //         cityName={'San Paulo'}\n    //     />\n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Chile'}\n    //         cityName={'Santiago'}\n    //     />\n    // </div>); \n    // const northAmerica = \n    // (<div className={styles.clockBoxes}>   \n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'USA'}\n    //         cityName={'New York'}\n    //     />\n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Canada'}\n    //         cityName={'Toronto'}\n    //     />\n    // </div>); \n\n\n    switch (continentName) {\n      // case 'Asia': \n      //     return asia; \n      case 'Europe':\n        return eur;\n      // case 'South America': \n      //     return southAmerica; \n      // case 'North America':\n      //     return northAmerica; \n\n      default:\n        return 0;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.regionBox,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.greyStripe,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.left,\n        children: data.continent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.right,\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 35\n        }, this), show ? /*#__PURE__*/_jsxDEV(AiFillMinusCircle, {\n          onClick: showHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(AiFillPlusCircle, {\n          onClick: showHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), show && renderByContinent(continentName)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegionBox, \"b5sSxw7RO2GIZGDfGU8+TXgjfng=\");\n\n_c = RegionBox;\nexport default RegionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegionBox\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/regionBox/RegionBox.js"],"names":["React","useState","useEffect","styles","AiFillMinusCircle","AiFillPlusCircle","Clock","RegionBox","continentName","data","show","setShow","isLoading","setIsLoading","console","log","showHandler","renderByContinent","myArray","unique","filter","v","i","a","indexOf","europe","asia","southAmerica","northAmerica","forEach","d","continent","push","eur","clockBoxes","map","el","as","regionBox","greyStripe","left","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport * as styles from './RegionBox.module.scss'; \nimport { AiFillMinusCircle } from 'react-icons/ai'; \nimport { AiFillPlusCircle } from 'react-icons/ai'; \n\nimport Clock from '../clock/Clock'; \n\n\n\nconst RegionBox = ({ continentName, data }) => {\n\n   \n    const [ show, setShow ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(false); \n\n    console.log(data);\n\n    const showHandler = () => {\n        setShow(show => !show ); \n    }\n\n    //need to optimize this part \n    const renderByContinent = (continentName) =>{\n\n        var myArray = ['a', 1, 'a', 2, '1'];\nvar unique = myArray.filter((v, i, a) => a.indexOf(v) === i);\n \n       \n        let europe = []; \n        let asia = []; \n        let southAmerica = []; \n        let northAmerica = []; \n        \n        \n        data.forEach(d => {\n\n            if(d.continent === 'Europe'){\n                europe.push(d); \n            } else if(d.continent === 'Asia'){\n                asia.push(d);\n            } else if(d.continent == 'South America'){\n                southAmerica.push(d); \n            } else if(d.continent == 'South America'){\n                northAmerica.push(d); \n            } \n        }); \n\n        //for europe \n        let eur = (<div className={styles.clockBoxes}>   \n            { \n                europe.map(el => \n                    \n                    <Clock \n                    id={el['id']}\n                    regionName={el['country']}\n                    cityName={el['city']}\n                    />) \n            }\n        </div>); \n\n        //for asia \n        let as = (<div className={styles.clockBoxes}>   \n            { \n                asia.map(el => \n                    \n                    <Clock \n                    id={el['id']}\n                    regionName={el['country']}\n                    cityName={el['city']}\n                    />) \n            }\n        </div>); \n\n\n\n\n\n\n        // (<div className={styles.clockBoxes}>   \n        //     {/* <Clock \n        //         regionName={europe[0]}\n        //         cityName={europe[0]}\n        //     /> */}\n        //     <Clock \n\n        //         regionName={'Belgium'}\n        //         cityName={'Brussels'}\n        //     />\n        //     <Clock  \n        //         regionName={'France'}\n        //         cityName={'Paris'}\n        //     />\n        //     <Clock \n        //         regionName={'United Kingdom'}\n        //         cityName={'London'}\n        //     />\n        // </div>); \n\n        // const southAmerica = \n        // (<div className={styles.clockBoxes}>   \n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Argentina'}\n        //         cityName={'Buenos Aires'}\n        //     />\n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Brazil'}\n        //         cityName={'San Paulo'}\n        //     />\n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Chile'}\n        //         cityName={'Santiago'}\n        //     />\n            \n        // </div>); \n\n        // const northAmerica = \n        // (<div className={styles.clockBoxes}>   \n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'USA'}\n        //         cityName={'New York'}\n        //     />\n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Canada'}\n        //         cityName={'Toronto'}\n        //     />\n            \n            \n        // </div>); \n        \n        \n        switch(continentName){\n            // case 'Asia': \n            //     return asia; \n            case 'Europe': \n                return eur; \n            // case 'South America': \n            //     return southAmerica; \n            // case 'North America':\n            //     return northAmerica; \n            default: \n                return 0; \n        }\n    }\n\n    \n    \n\n   \n    return (\n        <div className={styles.regionBox}>\n            <div className={styles.greyStripe}>\n                <div className={styles.left}>{data.continent}</div>\n                <div className={styles.right}>\n                    {isLoading && <div>Loading...</div>}\n                    {show ?  \n                        <AiFillMinusCircle onClick={showHandler}/> : \n                        <AiFillPlusCircle onClick={showHandler}/>\n                    }  \n                </div>\n            </div>\n            { show && renderByContinent(continentName)}\n            \n        </div>\n    )\n}\n\nexport default RegionBox; \n"]},"metadata":{},"sourceType":"module"}