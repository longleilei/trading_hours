{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/regionBox/RegionBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as styles from './RegionBox.module.scss';\nimport { AiFillMinusCircle } from 'react-icons/ai';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport Clock from '../clock/Clock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegionBox = ({\n  continentName\n}) => {\n  _s();\n\n  const initialState = {\n    secondRatio: 0,\n    minuteRatio: 0,\n    hourRatio: 0\n  };\n  const currentDate = new Date();\n  const [clockState, setClockState] = useState(initialState);\n  const [time, setTime] = useState(0);\n  const [show, setShow] = useState(true);\n\n  const showHandler = () => {\n    setShow(show => !show);\n  };\n\n  const renderByContinet = continentName => {};\n\n  const clockHandler = () => {\n    currentDate.getUTCDate(); //let utc_offcet = currentDate.getTimezoneOffset(); //offset is +8 from UTC\n    //currentDate.setMinutes(currentDate.getMinutes() + utc_offcet); \n\n    let secondRatio = currentDate.getSeconds() / 60;\n    let minuteRatio = (secondRatio + currentDate.getMinutes()) / 60;\n    let hourRatio = (minuteRatio + currentDate.getHours()) / 12; //console.log(secondRatio); \n\n    setClockState({ ...clockState,\n      secondRate: secondRatio\n    });\n    setClockState({ ...clockState,\n      minuteRate: minuteRatio\n    });\n    setClockState({ ...clockState,\n      hourRate: hourRatio\n    });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      clockHandler();\n      setTime(Date.now());\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.regionBox,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.greyStripe,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.left,\n        children: continentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.right,\n        children: show ? /*#__PURE__*/_jsxDEV(AiFillMinusCircle, {\n          onClick: showHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(AiFillPlusCircle, {\n          onClick: showHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.clockBoxes,\n      children: [/*#__PURE__*/_jsxDEV(Clock, {\n        secondRatio: clockState.secondRate,\n        minuteRatio: clockState.minuteRate,\n        hourRatio: clockState.hourRate,\n        regionName: 'Shanghai'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Clock, {\n        secondRatio: clockState.secondRate,\n        minuteRatio: clockState.minuteRate,\n        hourRatio: clockState.hourRate,\n        regionName: 'Hong Kong'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 22\n    }, this), \"}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegionBox, \"HY+uo/5Bl4HgUoJq3fzP27TSktU=\");\n\n_c = RegionBox;\nexport default RegionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegionBox\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/regionBox/RegionBox.js"],"names":["React","useState","useEffect","styles","AiFillMinusCircle","AiFillPlusCircle","Clock","RegionBox","continentName","initialState","secondRatio","minuteRatio","hourRatio","currentDate","Date","clockState","setClockState","time","setTime","show","setShow","showHandler","renderByContinet","clockHandler","getUTCDate","getSeconds","getMinutes","getHours","secondRate","minuteRate","hourRate","interval","setInterval","now","clearInterval","regionBox","greyStripe","left","right","clockBoxes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,KAAKC,MAAZ,MAAwB,yBAAxB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAAA;;AAErC,QAAMC,YAAY,GAAG;AAAEC,IAAAA,WAAW,EAAE,CAAf;AAAkBC,IAAAA,WAAW,EAAE,CAA/B;AAAkCC,IAAAA,SAAS,EAAE;AAA7C,GAArB;AACA,QAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;AAEA,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCf,QAAQ,CAACQ,YAAD,CAA9C;AACA,QAAM,CAAEQ,IAAF,EAAQC,OAAR,IAAoBjB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAEkB,IAAF,EAAQC,OAAR,IAAoBnB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMoB,WAAW,GAAG,MAAM;AACtBD,IAAAA,OAAO,CAACD,IAAI,IAAI,CAACA,IAAV,CAAP;AACH,GAFD;;AAIA,QAAMG,gBAAgB,GAAId,aAAD,IAAkB,CAE1C,CAFD;;AAQA,QAAMe,YAAY,GAAG,MAAM;AAEvBV,IAAAA,WAAW,CAACW,UAAZ,GAFuB,CAKvB;AACA;;AAEA,QAAId,WAAW,GAAGG,WAAW,CAACY,UAAZ,KAA2B,EAA7C;AACA,QAAId,WAAW,GAAG,CAACD,WAAW,GAAGG,WAAW,CAACa,UAAZ,EAAf,IAA2C,EAA7D;AACA,QAAId,SAAS,GAAG,CAACD,WAAW,GAAGE,WAAW,CAACc,QAAZ,EAAf,IAAyC,EAAzD,CAVuB,CAYvB;;AAEAX,IAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AAAgBa,MAAAA,UAAU,EAAElB;AAA5B,KAAD,CAAb;AACAM,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBc,MAAAA,UAAU,EAAElB;AAA7B,KAAD,CAAb;AACAK,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBe,MAAAA,QAAQ,EAAElB;AAA3B,KAAD,CAAb;AAGH,GAnBD;;AAqBAV,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAM6B,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BT,MAAAA,YAAY;AACZL,MAAAA,OAAO,CAACJ,IAAI,CAACmB,GAAL,EAAD,CAAP;AACH,KAH2B,EAGzB,IAHyB,CAA5B;AAKA,WAAO,MAAM;AACTC,MAAAA,aAAa,CAACH,QAAD,CAAb;AACH,KAFD;AAKH,GAZQ,EAYN,CAACd,IAAD,CAZM,CAAT;AAeA,sBACI;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACgC,SAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEhC,MAAM,CAACiC,UAAvB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEjC,MAAM,CAACkC,IAAvB;AAAA,kBAA8B7B;AAA9B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAEL,MAAM,CAACmC,KAAvB;AAAA,kBACKnB,IAAI,gBACD,QAAC,iBAAD;AAAmB,UAAA,OAAO,EAAEE;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADC,gBAED,QAAC,gBAAD;AAAkB,UAAA,OAAO,EAAEA;AAA3B;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAYMF,IAAI,iBACG;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACoC,UAAvB;AAAA,8BACG,QAAC,KAAD;AACI,QAAA,WAAW,EAAExB,UAAU,CAACa,UAD5B;AAEI,QAAA,WAAW,EAAEb,UAAU,CAACc,UAF5B;AAGI,QAAA,SAAS,EAAEd,UAAU,CAACe,QAH1B;AAII,QAAA,UAAU,EAAE;AAJhB;AAAA;AAAA;AAAA;AAAA,cADH,eAOG,QAAC,KAAD;AACI,QAAA,WAAW,EAAEf,UAAU,CAACa,UAD5B;AAEI,QAAA,WAAW,EAAEb,UAAU,CAACc,UAF5B;AAGI,QAAA,SAAS,EAAEd,UAAU,CAACe,QAH1B;AAII,QAAA,UAAU,EAAE;AAJhB;AAAA;AAAA;AAAA;AAAA,cAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YAbb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CA3FD;;GAAMvB,S;;KAAAA,S;AA6FN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport * as styles from './RegionBox.module.scss'; \nimport { AiFillMinusCircle } from 'react-icons/ai'; \nimport { AiFillPlusCircle } from 'react-icons/ai'; \n\nimport Clock from '../clock/Clock'; \n\n\n\nconst RegionBox = ({ continentName }) => {\n\n    const initialState = { secondRatio: 0, minuteRatio: 0, hourRatio: 0 }; \n    const currentDate = new Date;\n\n    const [ clockState, setClockState ] = useState(initialState);\n    const [ time, setTime ] = useState(0);  \n    const [ show, setShow ] = useState(true); \n\n    const showHandler = () => {\n        setShow(show => !show ); \n    }\n\n    const renderByContinet = (continentName) =>{\n        \n    }\n\n\n\n\n\n    const clockHandler = () => {\n\n        currentDate.getUTCDate(); \n        \n\n        //let utc_offcet = currentDate.getTimezoneOffset(); //offset is +8 from UTC\n        //currentDate.setMinutes(currentDate.getMinutes() + utc_offcet); \n     \n        let secondRatio = currentDate.getSeconds() / 60; \n        let minuteRatio = (secondRatio + currentDate.getMinutes()) / 60; \n        let hourRatio = (minuteRatio + currentDate.getHours()) / 12; \n    \n        //console.log(secondRatio); \n\n        setClockState({...clockState, secondRate: secondRatio});\n        setClockState({ ...clockState, minuteRate: minuteRatio });\n        setClockState({ ...clockState, hourRate: hourRatio }); \n       \n\n    }\n\n    useEffect(() => {\n\n        const interval = setInterval(() => {\n            clockHandler();\n            setTime(Date.now())    \n        }, 1000); \n       \n        return () => {\n            clearInterval(interval);\n        };\n\n        \n    }, [time]); \n\n   \n    return (\n        <div className={styles.regionBox}>\n            <div className={styles.greyStripe}>\n                <div className={styles.left}>{continentName}</div>\n                <div className={styles.right}>\n                    {show ?  \n                        <AiFillMinusCircle onClick={showHandler}/> : \n                        <AiFillPlusCircle onClick={showHandler}/>\n                    }\n                    \n                    \n                </div>\n            </div>\n            { show && \n                    (<div className={styles.clockBoxes}>   \n                        <Clock \n                            secondRatio={clockState.secondRate}\n                            minuteRatio={clockState.minuteRate}\n                            hourRatio={clockState.hourRate}\n                            regionName={'Shanghai'}\n                        />\n                        <Clock \n                            secondRatio={clockState.secondRate}\n                            minuteRatio={clockState.minuteRate}\n                            hourRatio={clockState.hourRate}\n                            regionName={'Hong Kong'}\n                        />\n                </div>)\n                }\n                \n            }\n            \n        </div>\n    )\n}\n\nexport default RegionBox; \n"]},"metadata":{},"sourceType":"module"}