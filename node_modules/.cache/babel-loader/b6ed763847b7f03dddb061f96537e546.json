{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/regionBox/RegionBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as styles from './RegionBox.module.scss';\nimport { AiFillMinusCircle } from 'react-icons/ai';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport Clock from '../clock/Clock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegionBox = ({\n  continentName,\n  data\n}) => {\n  _s();\n\n  const [show, setShow] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(data);\n\n  const showHandler = () => {\n    setShow(show => !show);\n  }; //need to optimize this part \n\n\n  const renderByContinent = continentName => {\n    //SOLVE PROBLEM HERE \n    let europe = [];\n    let el = {\n      'id': '',\n      'country': '',\n      'city': ''\n    }; //let el = {'country': '', 'city': ''}; \n\n    data.forEach(d => {\n      if (d.continent == 'Europe') {\n        el['id'] = d.id;\n        el['country'] = d.country;\n        el['city'] = d.city;\n        europe.push(el);\n      }\n    });\n    data.map(d => {\n      if (d.continent == 'Europe') {\n        el['id'] = d.id;\n        el['country'] = d.country;\n        el['city'] = d.city;\n        europe.push(el);\n      }\n    } // <>\n    //     <div key={d.id}>\n    //         <div>{d.continent}</div>\n    //         <div>{d.country}</div>\n    //         <div>{d.city}</div>\n    //         <div>{d.utcoffset}</div>\n    //         <div>{d.openHoursOne}</div>\n    //         <div>{d.openingHoursTwo}</div>\n    //     </div>\n    // </>\n    );\n    console.log(europe);\n    europe.map(el => console.log(el));\n\n    let eur = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.clockBoxes,\n      children: europe.map(el => /*#__PURE__*/_jsxDEV(Clock, {\n        id: el['id'],\n        regionName: el['country'],\n        cityName: el['city']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 20\n    }, this); // (<div className={styles.clockBoxes}>   \n    //     {/* <Clock \n    //         regionName={europe[0]}\n    //         cityName={europe[0]}\n    //     /> */}\n    //     <Clock \n    //         regionName={'Belgium'}\n    //         cityName={'Brussels'}\n    //     />\n    //     <Clock  \n    //         regionName={'France'}\n    //         cityName={'Paris'}\n    //     />\n    //     <Clock \n    //         regionName={'United Kingdom'}\n    //         cityName={'London'}\n    //     />\n    // </div>); \n    // const southAmerica = \n    // (<div className={styles.clockBoxes}>   \n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Argentina'}\n    //         cityName={'Buenos Aires'}\n    //     />\n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Brazil'}\n    //         cityName={'San Paulo'}\n    //     />\n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Chile'}\n    //         cityName={'Santiago'}\n    //     />\n    // </div>); \n    // const northAmerica = \n    // (<div className={styles.clockBoxes}>   \n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'USA'}\n    //         cityName={'New York'}\n    //     />\n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Canada'}\n    //         cityName={'Toronto'}\n    //     />\n    // </div>); \n\n\n    switch (continentName) {\n      // case 'Asia': \n      //     return asia; \n      case 'Europe':\n        return eur;\n      // case 'South America': \n      //     return southAmerica; \n      // case 'North America':\n      //     return northAmerica; \n\n      default:\n        return 0;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.regionBox,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.greyStripe,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.left,\n        children: data.continent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.right,\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 35\n        }, this), show ? /*#__PURE__*/_jsxDEV(AiFillMinusCircle, {\n          onClick: showHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(AiFillPlusCircle, {\n          onClick: showHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), show && renderByContinent(continentName)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegionBox, \"b5sSxw7RO2GIZGDfGU8+TXgjfng=\");\n\n_c = RegionBox;\nexport default RegionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegionBox\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/regionBox/RegionBox.js"],"names":["React","useState","useEffect","styles","AiFillMinusCircle","AiFillPlusCircle","Clock","RegionBox","continentName","data","show","setShow","isLoading","setIsLoading","console","log","showHandler","renderByContinent","europe","el","forEach","d","continent","id","country","city","push","map","eur","clockBoxes","regionBox","greyStripe","left","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport * as styles from './RegionBox.module.scss'; \nimport { AiFillMinusCircle } from 'react-icons/ai'; \nimport { AiFillPlusCircle } from 'react-icons/ai'; \n\nimport Clock from '../clock/Clock'; \n\n\n\nconst RegionBox = ({ continentName, data }) => {\n\n   \n    const [ show, setShow ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(false); \n\n    console.log(data);\n\n    const showHandler = () => {\n        setShow(show => !show ); \n    }\n\n    //need to optimize this part \n    const renderByContinent = (continentName) =>{\n \n        //SOLVE PROBLEM HERE \n        let europe = []; \n        let el = {'id': '', 'country': '', 'city': ''}; \n        //let el = {'country': '', 'city': ''}; \n       \n        data.forEach(d => {\n            if(d.continent == 'Europe'){\n                el['id'] = d.id; \n                el['country'] = d.country; \n                el['city'] = d.city; \n                europe.push(el); \n            }\n        }); \n\n\n\n        data.map( d =>\n            {\n\n                if(d.continent == 'Europe'){\n                    el['id'] = d.id; \n                    el['country'] = d.country; \n                    el['city'] = d.city; \n                    europe.push(el); \n                }\n\n            } \n\n        \n\n            \n            // <>\n            //     <div key={d.id}>\n            //         <div>{d.continent}</div>\n            //         <div>{d.country}</div>\n            //         <div>{d.city}</div>\n            //         <div>{d.utcoffset}</div>\n            //         <div>{d.openHoursOne}</div>\n            //         <div>{d.openingHoursTwo}</div>\n            //     </div>\n            // </>\n        )\n\n        console.log(europe); \n        europe.map(el => console.log(el))\n\n\n    \n        let eur = (<div className={styles.clockBoxes}>   \n        \n\n            {/* { europe.forEach(component => \n                component.map(el => \n                    <Clock \n                    regionName={el['country']}\n                    cityName={el['city']}\n                    />)\n                    )   \n            } */}\n\n            { \n                europe.map(el => \n                    \n                    <Clock \n                    id={el['id']}\n                    regionName={el['country']}\n                    cityName={el['city']}\n                    />\n                    \n                    ) \n            }\n            \n        \n        \n        </div>); \n        // (<div className={styles.clockBoxes}>   \n        //     {/* <Clock \n        //         regionName={europe[0]}\n        //         cityName={europe[0]}\n        //     /> */}\n        //     <Clock \n\n        //         regionName={'Belgium'}\n        //         cityName={'Brussels'}\n        //     />\n        //     <Clock  \n        //         regionName={'France'}\n        //         cityName={'Paris'}\n        //     />\n        //     <Clock \n        //         regionName={'United Kingdom'}\n        //         cityName={'London'}\n        //     />\n        // </div>); \n\n        // const southAmerica = \n        // (<div className={styles.clockBoxes}>   \n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Argentina'}\n        //         cityName={'Buenos Aires'}\n        //     />\n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Brazil'}\n        //         cityName={'San Paulo'}\n        //     />\n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Chile'}\n        //         cityName={'Santiago'}\n        //     />\n            \n        // </div>); \n\n        // const northAmerica = \n        // (<div className={styles.clockBoxes}>   \n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'USA'}\n        //         cityName={'New York'}\n        //     />\n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Canada'}\n        //         cityName={'Toronto'}\n        //     />\n            \n            \n        // </div>); \n        \n        \n        switch(continentName){\n            // case 'Asia': \n            //     return asia; \n            case 'Europe': \n                return eur; \n            // case 'South America': \n            //     return southAmerica; \n            // case 'North America':\n            //     return northAmerica; \n            default: \n                return 0; \n        }\n    }\n\n    \n    \n\n   \n    return (\n        <div className={styles.regionBox}>\n            <div className={styles.greyStripe}>\n                <div className={styles.left}>{data.continent}</div>\n                <div className={styles.right}>\n                    {isLoading && <div>Loading...</div>}\n                    {show ?  \n                        <AiFillMinusCircle onClick={showHandler}/> : \n                        <AiFillPlusCircle onClick={showHandler}/>\n                    }  \n                </div>\n            </div>\n            { show && renderByContinent(continentName)}\n            \n        </div>\n    )\n}\n\nexport default RegionBox; \n"]},"metadata":{},"sourceType":"module"}