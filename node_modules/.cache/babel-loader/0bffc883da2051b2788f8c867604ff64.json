{"ast":null,"code":"import _slicedToArray from\"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{CountryDropdown,RegionDropdown,CountryRegionData}from'react-country-region-selector';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GeoSelector=function GeoSelector(_ref){var geo=_ref.geo;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),geoCountry=_useState2[0],setGeoCountry=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),geoCity=_useState4[0],setGeoCity=_useState4[1];var selectCountry=function selectCountry(val){setGeoCountry(function(geoCountry){return val;});};var selectRegion=function selectRegion(val){setGeoCity(function(geoCity){return val;});geo([geoCountry,val]);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CountryDropdown,{value:geoCountry,onChange:function onChange(val){return selectCountry(val);}//onChange={(e) => selectCountry(e)}\n,style:{color:'grey',fontSize:'17px',height:'40px'},children:geoCountry}),/*#__PURE__*/_jsx(RegionDropdown,{country:geoCountry,value:geoCity//onChange={(e) => selectRegion(e)}\n,onChange:function onChange(val){return selectRegion(val);},style:{color:'grey',fontSize:'17px',height:'40px',boxShadow:'grey'},blankOptionLabel:\"No country selected\",defaultOptionLabel:\"Now select a region\",children:geoCity})]});};export default GeoSelector;","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/geoSelector/GeoSelector.js"],"names":["React","useState","CountryDropdown","RegionDropdown","CountryRegionData","GeoSelector","geo","geoCountry","setGeoCountry","geoCity","setGeoCity","selectCountry","val","selectRegion","color","fontSize","height","boxShadow"],"mappings":"qLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,eAAT,CAA0BC,cAA1B,CAA0CC,iBAA1C,KAAmE,+BAAnE,C,wFAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAa,IAAVC,CAAAA,GAAU,MAAVA,GAAU,eAESL,QAAQ,CAAC,EAAD,CAFjB,wCAErBM,UAFqB,eAETC,aAFS,8BAGGP,QAAQ,CAAC,EAAD,CAHX,yCAGrBQ,OAHqB,eAGZC,UAHY,eAO7B,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,GAAD,CAAS,CAC3BJ,aAAa,CAAC,SAAAD,UAAU,QAAIK,CAAAA,GAAJ,EAAX,CAAb,CACH,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACD,GAAD,CAAS,CAC1BF,UAAU,CAAC,SAAAD,OAAO,QAAIG,CAAAA,GAAJ,EAAR,CAAV,CACAN,GAAG,CAAC,CAACC,UAAD,CAAaK,GAAb,CAAD,CAAH,CACH,CAHD,CAQA,mBACI,oCAEI,KAAC,eAAD,EACI,KAAK,CAAEL,UADX,CAEI,QAAQ,CAAE,kBAAAK,GAAG,QAAID,CAAAA,aAAa,CAACC,GAAD,CAAjB,EACb;AAHJ,CAKI,KAAK,CAAE,CAAEE,KAAK,CAAE,MAAT,CAAiBC,QAAQ,CAAE,MAA3B,CAAmCC,MAAM,CAAE,MAA3C,CALX,UAMMT,UANN,EAFJ,cAUI,KAAC,cAAD,EACI,OAAO,CAAEA,UADb,CAEI,KAAK,CAAEE,OACP;AAHJ,CAII,QAAQ,CAAE,kBAAAG,GAAG,QAAIC,CAAAA,YAAY,CAACD,GAAD,CAAhB,EAJjB,CAMI,KAAK,CAAE,CAAEE,KAAK,CAAE,MAAT,CAAiBC,QAAQ,CAAE,MAA3B,CAAmCC,MAAM,CAAE,MAA3C,CAAmDC,SAAS,CAAE,MAA9D,CANX,CAOI,gBAAgB,CAAC,qBAPrB,CAQI,kBAAkB,CAAC,qBARvB,UASMR,OATN,EAVJ,GADJ,CAyBH,CA5CD,CA8CA,cAAeJ,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react'; \nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\n\nconst GeoSelector = ({ geo }) => {\n\n    const [ geoCountry, setGeoCountry ] = useState(''); \n    const [ geoCity, setGeoCity ] = useState(''); \n\n\n\n    const selectCountry = (val) => {\n        setGeoCountry(geoCountry => val); \n    }\n\n    const selectRegion = (val) => {\n        setGeoCity(geoCity => val);\n        geo([geoCountry, val]); \n    }\n\n\n   \n\n    return (\n        <div>\n\n            <CountryDropdown \n                value={geoCountry}\n                onChange={val => selectCountry(val)}\n                //onChange={(e) => selectCountry(e)}\n\n                style={{ color: 'grey', fontSize: '17px', height: '40px'}}\n                >{geoCountry}</CountryDropdown>\n\n            <RegionDropdown \n                country={geoCountry}\n                value={geoCity}\n                //onChange={(e) => selectRegion(e)}\n                onChange={val => selectRegion(val)}\n\n                style={{ color: 'grey', fontSize: '17px', height: '40px', boxShadow: 'grey'}}\n                blankOptionLabel=\"No country selected\"\n                defaultOptionLabel=\"Now select a region\"\n                >{geoCity}</RegionDropdown>   \n\n \n        </div>\n    )\n}\n\nexport default GeoSelector; \n"]},"metadata":{},"sourceType":"module"}