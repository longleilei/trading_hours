{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/clock/Clock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Overlay, Popover } from 'react-bootstrap';\nimport './Clock.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clock = ({\n  regionName,\n  cityName,\n  utcoffset,\n  openHoursOne,\n  openHoursTwo\n}) => {\n  _s();\n\n  let countryHours = openHoursOne.split('-');\n  const initialState = {\n    secondRatio: 0,\n    minuteRatio: 0,\n    hourRatio: 0\n  }; //const [ cit, setCit ] = useState(''); \n\n  const [clockState, setClockState] = useState(initialState);\n  const [time, setTime] = useState(0);\n  const [dayTimeStr, setDayTimeStr] = useState('');\n  const [hoursClosedFriday, setHoursClosedFriday] = useState(false);\n  const [hoursOpen, setHoursOpen] = useState(false); //for bs popup \n\n  const [show, setShow] = useState(false);\n  const [target, setTarget] = useState(null);\n  const ref = useRef(null);\n\n  const handleClick = event => {\n    setShow(!show);\n    setTarget(event.target);\n  };\n\n  const calculateUniversalUTC = () => {\n    //returns local date from where the app is used \n    let date = new Date(); //console.log(date); \n    //offcet taken at the place where app is used \n\n    let app_utc_offcet = date.getTimezoneOffset(); //returns -480 \n    //this is the abstract date according to UTC\n\n    date.setHours(date.getHours() + app_utc_offcet / 60); //console.log('ABSTRACT TIME', date); \n\n    return date;\n  };\n\n  const calculateCurrentLocalDate = () => {\n    let utcdate = calculateUniversalUTC(); //console.log(\"UTCDATE\" + utcdate); \n    //calculate time according to offcet of the country\n\n    utcdate.setHours(utcdate.getHours() + utcoffset / 60); //console.log('SHANGHAI TIME', utcdate); \n\n    return utcdate;\n  };\n\n  const formatDate = date => {\n    let d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    let year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  }; //delete this function\n\n\n  const splitTimeSlot = openHoursOne => {\n    //['11:00', '14:00'] or instead ['11am', '2pm']\n    let hoursFrom = Number(countryHours[0].slice(0, 2));\n    let hoursTo = Number(countryHours[1].slice(0, 2));\n    return {\n      hoursFrom,\n      hoursTo\n    };\n  };\n\n  const digitalClockConverter = date => {\n    //getting day of the week \n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'];\n    let dayNum = Number(date.getDay());\n    let stsDay = days[dayNum]; //getting hours in am/pm \n\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    let strTime = hours + ':' + minutes + ' ' + ampm;\n    let timeStr = stsDay + ' ' + strTime;\n    setDayTimeStr(dayTimeStr => timeStr);\n  };\n\n  const clockStateHandler = date => {\n    let secondRatio = date.getSeconds() / 60;\n    let minuteRatio = (secondRatio + date.getMinutes()) / 60;\n    let hourRatio = (minuteRatio + date.getHours()) / 12;\n    setClockState({ ...clockState,\n      secondRate: secondRatio,\n      minuteRate: minuteRatio,\n      hourRate: hourRatio\n    });\n  };\n\n  const clockHandler = () => {\n    let currentDate = calculateCurrentLocalDate();\n    clockStateHandler(currentDate);\n    digitalClockConverter(currentDate);\n  };\n\n  const calculateLocalTime = () => {\n    //Amsterdam 19:00 is 01:00 locally => 6 hours \n    //Amsterdam utc +2 Local utc +8 => 6 hours difference \n    const date = new Date();\n    const localUTC = date.getTimezoneOffset(); //console.log(localUTC)\n\n    let utcDiff = Math.abs(localUTC / 60) - utcoffset / 60; //6\n    //11:00-14:00\n\n    let hoursFrom = Number(countryHours[0].slice(0, 2)) + utcDiff; //console.log(hoursFrom);  \n\n    let hoursTo = Number(countryHours[1].slice(0, 2)) + utcDiff; //check single digit\n\n    if (String(+hoursFrom).charAt(0) == hoursFrom) {\n      hoursFrom += '0';\n    }\n\n    if (String(+hoursTo).charAt(0) == hoursTo) {\n      hoursTo += '0';\n    }\n\n    return {\n      hoursFrom,\n      hoursTo\n    };\n  };\n\n  const calculateRemainingTime = endtime => {\n    let date = new Date().getHours();\n    console.log(endtime);\n    const total = Date.parse(endtime) - Date.parse(new Date().getHours() + 6);\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / (1000 * 60 * 60) % 24);\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    return [days, hours, minutes, seconds];\n  };\n\n  const calculateUntilClose = () => {\n    let endtime = `${new Date()} ${openHoursOne.split('-')[1]}`; //11:30\n    //console.log(endtime); \n\n    if (hoursOpen) {\n      const [ds, hs, ms, ss] = calculateRemainingTime(endtime);\n      return `${ds}d ${hs}:${ms}:${ss}`;\n    }\n\n    return 0;\n  };\n\n  const calculateUntilOpen = () => {\n    let endtime = new Date(); //on Friday when it's closed already, we add + 2 days to get to Monday (get endtime)\n\n    if (hoursClosedFriday) {\n      const numberOfDaysToAdd = 3;\n      endtime.setDate(endtime.getDate() + numberOfDaysToAdd);\n    } else if (endtime.getDay() == 6) {\n      //check if Saturday \n      const numberOfDaysToAdd = 2;\n      endtime.setDate(endtime.getDate() + numberOfDaysToAdd);\n    } else if (endtime.getDay() == 0) {\n      //check if Sunday\n      const numberOfDaysToAdd = 1;\n      endtime.setDate(endtime.getDate() + numberOfDaysToAdd);\n    }\n\n    endtime = `${endtime.toDateString()} ${Number(countryHours[0].slice(0, 2)) + 6}`; //console.log(endtime); \n\n    const [ds, hs, ms, ss] = calculateRemainingTime(endtime);\n    return `${ds}d ${hs}:${ms}:${ss}`;\n  };\n\n  const handleOpenButton = () => {\n    //get current local time\n    let currentLocalTime = calculateCurrentLocalDate(); //console.log(currentLocalTime); \n\n    let formattedDate = formatDate(currentLocalTime);\n    const timeNow = new Date();\n    let startTime = countryHours[0];\n    let endTime = countryHours[1];\n    let startTimeObj = new Date(`${formattedDate} ${startTime}`);\n    let endTimeObj = new Date(`${formattedDate} ${endTime}`);\n    let open = ''; //check if it's Saturday or Sunday \n\n    if (timeNow.getDay() == 6 || timeNow.getDay() == 0) {\n      open = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"oval red\",\n        children: \"Closed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }, this);\n    } else {\n      open = timeNow < endTimeObj && timeNow > startTimeObj ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"oval green\",\n        children: \"Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"oval red\",\n        children: \"Closed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 16\n      }, this);\n    }\n\n    if (timeNow.getDay() == 5 && open == /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"oval red\",\n      children: \"Closed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 46\n    }, this)) {\n      setHoursClosedFriday(hoursClosedFriday => true);\n    } else if (open == /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"oval green\",\n      children: \"Open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 28\n    }, this)) {\n      setHoursOpen(hoursOpen => true);\n    }\n\n    ; //console.log(hoursClosed)\n\n    return open;\n  };\n\n  useEffect(() => {\n    //console.log('CITYNAME', cityName); \n    const interval = setInterval(() => {\n      clockHandler();\n      setTime(Date.now());\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainFont\",\n        children: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"secondaryFont\",\n        children: regionName.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainFont\",\n        children: dayTimeStr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand hour\",\n          style: {\n            transform: `translate(-50%) rotate(${clockState.hourRate * 360}deg)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand minute\",\n          style: {\n            transform: `translate(-50%) rotate(${clockState.minuteRate * 360}deg)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand second\",\n          style: {\n            transform: `translate(-50%) rotate(${clockState.secondRate * 360}deg)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number7\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number9\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number10\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number11\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"11\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: handleOpenButton()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [calculateUntilOpen(), \" until open\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [hoursOpen && `${calculateUntilClose()} until close`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"oval2\",\n          onClick: handleClick,\n          children: \"Show Open/Close Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n          show: show,\n          target: target,\n          placement: \"top\",\n          containerPadding: 20,\n          children: /*#__PURE__*/_jsxDEV(Popover, {\n            id: \"popover-contained\",\n            children: /*#__PURE__*/_jsxDEV(Popover.Content, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"contentBox\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"shedule\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [cityName.toUpperCase(), \" TIME\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: openHoursOne\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"shedule\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"LOCAL TIME\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: `${calculateLocalTime()['hoursFrom']}:${countryHours[0].slice(3, 5)} - ${calculateLocalTime()['hoursTo']}:${countryHours[1].slice(3, 5)}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Clock, \"6pZKqi31YHDbl8jlq8JGqCIroOc=\");\n\n_c = Clock;\nexport default Clock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/clock/Clock.js"],"names":["React","useState","useEffect","useRef","Overlay","Popover","Clock","regionName","cityName","utcoffset","openHoursOne","openHoursTwo","countryHours","split","initialState","secondRatio","minuteRatio","hourRatio","clockState","setClockState","time","setTime","dayTimeStr","setDayTimeStr","hoursClosedFriday","setHoursClosedFriday","hoursOpen","setHoursOpen","show","setShow","target","setTarget","ref","handleClick","event","calculateUniversalUTC","date","Date","app_utc_offcet","getTimezoneOffset","setHours","getHours","calculateCurrentLocalDate","utcdate","formatDate","d","month","getMonth","day","getDate","year","getFullYear","length","join","splitTimeSlot","hoursFrom","Number","slice","hoursTo","digitalClockConverter","days","dayNum","getDay","stsDay","hours","minutes","getMinutes","ampm","strTime","timeStr","clockStateHandler","getSeconds","secondRate","minuteRate","hourRate","clockHandler","currentDate","calculateLocalTime","localUTC","utcDiff","Math","abs","String","charAt","calculateRemainingTime","endtime","console","log","total","parse","seconds","floor","calculateUntilClose","ds","hs","ms","ss","calculateUntilOpen","numberOfDaysToAdd","setDate","toDateString","handleOpenButton","currentLocalTime","formattedDate","timeNow","startTime","endTime","startTimeObj","endTimeObj","open","interval","setInterval","now","clearInterval","toUpperCase","transform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'; \nimport { Overlay, Popover } from 'react-bootstrap';\n\nimport './Clock.css'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\n\n\nconst Clock = ({ regionName, cityName, utcoffset, openHoursOne, openHoursTwo }) => {\n\n    let countryHours = openHoursOne.split('-'); \n\n\n    const initialState = { secondRatio: 0, minuteRatio: 0, hourRatio: 0 }; \n    \n    //const [ cit, setCit ] = useState(''); \n    const [ clockState, setClockState ] = useState(initialState);\n    const [ time, setTime ] = useState(0);  \n    const [ dayTimeStr, setDayTimeStr ] = useState('');\n    const [ hoursClosedFriday, setHoursClosedFriday ] = useState(false); \n    const [ hoursOpen, setHoursOpen ] = useState(false); \n\n    //for bs popup \n    const [show, setShow] = useState(false);\n    const [target, setTarget] = useState(null);\n    const ref = useRef(null);\n\n    \n    \n    const handleClick = (event) => {\n        setShow(!show);\n        setTarget(event.target);\n    };\n\n    const calculateUniversalUTC = () => {\n\n        //returns local date from where the app is used \n        let date = new Date;    \n        //console.log(date); \n    \n        //offcet taken at the place where app is used \n        let app_utc_offcet = date.getTimezoneOffset(); //returns -480 \n\n        //this is the abstract date according to UTC\n        date.setHours(date.getHours() + (app_utc_offcet/60)); \n        //console.log('ABSTRACT TIME', date); \n\n        return date; \n    }\n\n    const calculateCurrentLocalDate = () => {\n\n        let utcdate = calculateUniversalUTC(); \n        //console.log(\"UTCDATE\" + utcdate); \n\n        //calculate time according to offcet of the country\n        utcdate.setHours(utcdate.getHours() + (utcoffset/60)); \n        //console.log('SHANGHAI TIME', utcdate); \n\n        return utcdate; \n\n    }\n\n    const formatDate = (date) => {\n        let d = new Date(date); \n\n        let month = '' + (d.getMonth() + 1);\n        let day = '' + d.getDate();\n        let year = d.getFullYear();\n\n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n\n        return [year, month, day].join('-');\n    }\n\n\n    //delete this function\n    const splitTimeSlot = (openHoursOne) => {\n        //['11:00', '14:00'] or instead ['11am', '2pm']\n        \n        let hoursFrom = Number(countryHours[0].slice(0,2));  \n        let hoursTo = Number(countryHours[1].slice(0,2));\n\n        return { hoursFrom, hoursTo}; \n    }\n\n    const digitalClockConverter = (date) => {\n\n        \n        //getting day of the week \n        const days = ['Sun','Mon','Tue','Wed','Thur','Fri','Sat'];\n        let dayNum = Number(date.getDay()); \n        let stsDay = days[dayNum]; \n        \n\n        //getting hours in am/pm \n        let hours = date.getHours();\n        let minutes = date.getMinutes();\n        let ampm = hours >= 12 ? 'PM' : 'AM';\n        hours = hours % 12;\n        hours = hours ? hours : 12; \n        minutes = minutes < 10 ? '0'+minutes : minutes;\n        let strTime = hours + ':' + minutes + ' ' + ampm;\n        \n        let timeStr = stsDay + ' ' + strTime;\n\n        setDayTimeStr( dayTimeStr => timeStr); \n        \n    } \n  \n\n    const clockStateHandler = (date) => {\n        \n        let secondRatio = date.getSeconds() / 60; \n        let minuteRatio = (secondRatio + date.getMinutes()) / 60; \n        let hourRatio = (minuteRatio + date.getHours()) / 12;  \n    \n        setClockState({...clockState, secondRate: secondRatio, minuteRate: minuteRatio, hourRate: hourRatio});\n\n    }\n\n    const clockHandler = () => {\n\n        \n        let currentDate = calculateCurrentLocalDate(); \n    \n        clockStateHandler(currentDate); \n        digitalClockConverter(currentDate);\n\n\n    }\n\n    const calculateLocalTime = () => {\n        //Amsterdam 19:00 is 01:00 locally => 6 hours \n        //Amsterdam utc +2 Local utc +8 => 6 hours difference \n\n        const date = new Date;\n        const localUTC = date.getTimezoneOffset(); \n        //console.log(localUTC)\n\n        let utcDiff = Math.abs(localUTC/60) - (utcoffset/60); //6\n\n        //11:00-14:00\n        \n        let hoursFrom = Number(countryHours[0].slice(0,2)) + utcDiff; \n        //console.log(hoursFrom);  \n        let hoursTo = Number(countryHours[1].slice(0,2)) + utcDiff;\n\n        //check single digit\n        if(String(+hoursFrom).charAt(0) == hoursFrom){\n            hoursFrom += '0'; \n        }\n\n        if(String(+hoursTo).charAt(0) == hoursTo){\n            hoursTo += '0'; \n        }\n        \n        return { hoursFrom, hoursTo }; \n        \n    }\n\n    const calculateRemainingTime = (endtime) => {\n        \n        let date = new Date().getHours(); \n        console.log(endtime); \n\n        const total = Date.parse(endtime) - Date.parse(new Date().getHours() + 6);\n        const seconds = Math.floor( (total/1000) % 60 );\n        const minutes = Math.floor( (total/1000/60) % 60 );\n        const hours = Math.floor( (total/(1000*60*60)) % 24 );\n        const days = Math.floor( total/(1000*60*60*24) );\n\n        return [days,hours,minutes,seconds]; \n    }\n\n    const calculateUntilClose = () => {\n\n\n        let endtime = `${new Date()} ${openHoursOne.split('-')[1]}`; //11:30\n        //console.log(endtime); \n\n        if(hoursOpen){\n\n            const [ds, hs, ms, ss] = calculateRemainingTime(endtime); \n            return `${ds}d ${hs}:${ms}:${ss}`; \n        }\n\n        return 0; \n    }\n\n    \n\n    const calculateUntilOpen = () => {\n\n        let endtime = new Date(); \n\n        //on Friday when it's closed already, we add + 2 days to get to Monday (get endtime)\n        if(hoursClosedFriday){\n            const numberOfDaysToAdd = 3;\n            endtime.setDate(endtime.getDate() + numberOfDaysToAdd); \n        } else if (endtime.getDay() == 6){ //check if Saturday \n            const numberOfDaysToAdd = 2;\n            endtime.setDate(endtime.getDate() + numberOfDaysToAdd); \n        } else if(endtime.getDay() == 0){ //check if Sunday\n            const numberOfDaysToAdd = 1;\n            endtime.setDate(endtime.getDate() + numberOfDaysToAdd); \n        }  \n\n        endtime = `${endtime.toDateString()} ${Number(countryHours[0].slice(0,2)) + 6}`; \n        //console.log(endtime); \n\n        const [ds, hs, ms, ss] = calculateRemainingTime(endtime); \n\n        return `${ds}d ${hs}:${ms}:${ss}`; \n\n\n    }\n\n\n\n    const handleOpenButton = () => {\n\n        //get current local time\n        let currentLocalTime = calculateCurrentLocalDate(); \n        //console.log(currentLocalTime); \n\n        let formattedDate = formatDate(currentLocalTime); \n        \n        const timeNow = new Date(); \n        \n\n        \n        let startTime = countryHours[0]; \n        let endTime = countryHours[1]; \n\n\n        let startTimeObj = new Date(`${formattedDate} ${startTime}`); \n        let endTimeObj = new Date(`${formattedDate} ${endTime}`);\n\n        let open = ''; \n\n        //check if it's Saturday or Sunday \n        if(timeNow.getDay() == 6 || timeNow.getDay() == 0){\n            open = (<div className=\"oval red\">Closed</div>); \n\n        } else {\n            open = timeNow < endTimeObj && timeNow > startTimeObj \n            ? (<div className=\"oval green\">Open</div>) \n            : (<div className=\"oval red\">Closed</div>); \n        }\n\n        if(timeNow.getDay() == 5 && open == (<div className=\"oval red\">Closed</div>)){\n            setHoursClosedFriday(hoursClosedFriday => true); \n        } else if(open == (<div className=\"oval green\">Open</div>)){\n            setHoursOpen(hoursOpen => true); \n        }; \n         \n        //console.log(hoursClosed)\n        return open;  \n    }\n\n    \n\n    \n    useEffect(() => {\n        //console.log('CITYNAME', cityName); \n        const interval = setInterval(() => {\n            clockHandler();\n            setTime(Date.now())    \n        }, 1000); \n       \n        return () => {\n            clearInterval(interval);\n        };\n    \n        \n    }, [time]); \n\n\n    return (\n        <div className=\"mainContainer\">\n            <div className=\"top\">\n                <div className=\"mainFont\">{cityName}</div>\n                <div className=\"secondaryFont\">{regionName.toUpperCase()}</div>\n                <div className=\"mainFont\">{dayTimeStr}</div>\n            </div>\n\n            <div class=\"middle\">\n                <div className=\"clock\">\n                    <div className=\"hand hour\" \n                        style={{transform: `translate(-50%) rotate(${clockState.hourRate * 360}deg)`}}>\n                    </div>\n                    <div className=\"hand minute\"\n                        style={{transform: `translate(-50%) rotate(${clockState.minuteRate * 360}deg)`}}>\n                    </div>\n                    <div className=\"hand second\"\n                        style={{transform: `translate(-50%) rotate(${clockState.secondRate * 360}deg)`}}>\n                    </div>\n\n                    <div className=\"number number1\">\n                        <div>1</div>\n                    </div>\n\n                    <div className=\"number number2\">\n                        <div>2</div>\n                    </div>\n\n                    <div className=\"number number3\">\n                        <div>3</div>\n                    </div>\n\n                    <div className=\"number number4\">\n                        <div>4</div>\n                    </div>\n\n                    <div className=\"number number5\">\n                        <div>5</div>\n                    </div>\n\n                    <div className=\"number number6\">\n                        <div>6</div>\n                    </div>\n\n                    <div className=\"number number7\">\n                        <div>7</div>\n                    </div>\n\n                    <div className=\"number number8\">\n                        <div>8</div>\n                    </div>\n\n                    <div className=\"number number9\">\n                        <div>9</div>\n                    </div>\n\n                    <div className=\"number number10\">\n                        <div>10</div>\n                    </div>\n\n                    <div className=\"number number11\">\n                        <div>11</div>\n                    </div>\n\n                    <div className=\"number number12\">\n                        <div>12</div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"bottom\">\n                <div>\n\n                    {handleOpenButton()}\n                    \n                </div>\n                <div className=\"addInfo\">\n                    <div>{calculateUntilOpen()} until open</div>\n                    <div>{hoursOpen && (`${calculateUntilClose()} until close`)} </div>\n                </div>\n\n                <div ref={ref}>\n                    \n                    <div className=\"oval2\" onClick={handleClick}>Show Open/Close Hours</div>\n\n                    <Overlay show={show} target={target} placement=\"top\" containerPadding={20}>\n                        <Popover id=\"popover-contained\">\n                            <Popover.Content>\n\n                                <div class=\"contentBox\">\n                                    <div class=\"shedule\">\n                                        <div>{cityName.toUpperCase()} TIME</div>\n                                        <div>{openHoursOne}</div>\n                                    </div>\n                                    <div class=\"shedule\">\n                                        <div>LOCAL TIME</div>\n                                        <div>{`${calculateLocalTime()['hoursFrom']}:${countryHours[0].slice(3,5)} - ${calculateLocalTime()['hoursTo']}:${countryHours[1].slice(3,5)}`}</div>\n                                    </div>  \n                                </div>\n                                \n                            </Popover.Content>\n                        </Popover>\n                    </Overlay>\n                </div>               \n            </div>            \n        </div>\n    )\n}\n\nexport default Clock; \n"]},"metadata":{},"sourceType":"module"}