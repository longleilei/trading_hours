{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/geoSelector/GeoSelector.js\";\nimport React, { useState, useReducer } from 'react';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GeoSelector = () => {\n  // const initialGeoState = {  country: '', region: '' }; \n  // const [ geoState, setGeoState ] = useState(initialGeoState); \n  // const selectCountry = (val) => {\n  //     setGeoState({...setGeoState, country: val}); \n  // }\n  // const selectRegion = (val) => {\n  //     setGeoState({...setGeoState, region: val}); \n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CountryDropdown, {\n      value: state.country,\n      onChange: handleCountryChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RegionDropdown, {\n      country: state.country,\n      value: state.region,\n      onChange: handleCountryChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GeoSelector;\nexport default GeoSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeoSelector\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/geoSelector/GeoSelector.js"],"names":["React","useState","useReducer","CountryDropdown","RegionDropdown","CountryRegionData","GeoSelector","state","country","handleCountryChange","region"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,QAAmE,+BAAnE;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAEtB;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA,sBACI;AAAA,4BACI,QAAC,eAAD;AACI,MAAA,KAAK,EAAEC,KAAK,CAACC,OADjB;AAEI,MAAA,QAAQ,EAAEC;AAFd;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,cAAD;AACI,MAAA,OAAO,EAAEF,KAAK,CAACC,OADnB;AAEI,MAAA,KAAK,EAAED,KAAK,CAACG,MAFjB;AAGI,MAAA,QAAQ,EAAED;AAHd;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA7BD;;KAAMH,W;AA+BN,eAAeA,WAAf","sourcesContent":["import React, { useState, useReducer } from 'react'; \nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\n\nconst GeoSelector = () => {\n\n    // const initialGeoState = {  country: '', region: '' }; \n\n    // const [ geoState, setGeoState ] = useState(initialGeoState); \n\n    // const selectCountry = (val) => {\n    //     setGeoState({...setGeoState, country: val}); \n    // }\n\n    // const selectRegion = (val) => {\n    //     setGeoState({...setGeoState, region: val}); \n    // }\n\n\n    return (\n        <div>\n            <CountryDropdown\n                value={state.country}\n                onChange={handleCountryChange}\n            />\n\n            <RegionDropdown\n                country={state.country}\n                value={state.region}\n                onChange={handleCountryChange}\n            />   \n        </div>\n    )\n}\n\nexport default GeoSelector; \n"]},"metadata":{},"sourceType":"module"}