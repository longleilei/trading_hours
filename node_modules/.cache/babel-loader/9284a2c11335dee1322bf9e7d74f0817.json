{"ast":null,"code":"import _slicedToArray from\"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import*as styles from'./RegionBox.module.scss';import{AiFillMinusCircle}from'react-icons/ai';import{AiFillPlusCircle}from'react-icons/ai';import Clock from'../clock/Clock';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RegionBox=function RegionBox(_ref){var continentName=_ref.continentName,data=_ref.data;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var showHandler=function showHandler(){setShow(function(show){return!show;});};var continentMap=function continentMap(returnArr,mapArr){returnArr=/*#__PURE__*/_jsx(\"div\",{className:styles.clockBoxes,children:mapArr.map(function(el){return/*#__PURE__*/_jsx(Clock,{regionName:el['country'],cityName:el['city'],utcoffset:el['utcoffset'],openHoursOne:el['openHoursOne'],openHoursTwo:el['openHoursTwo']},el['id']);})});return returnArr;};//need to optimize this part \nvar renderByContinent=function renderByContinent(continentName){//mapArr\nvar europe=[];var asia=[];var southAmerica=[];var northAmerica=[];//returnArr\nvar eur=[];var as=[];var southA=[];var northA=[];data.forEach(function(d){if(d.continent==='Europe'){europe.push(d);}else if(d.continent==='Asia'){asia.push(d);}else if(d.continent=='South America'){southAmerica.push(d);}else if(d.continent=='North America'){northAmerica.push(d);}});switch(continentName){case'Asia':return continentMap(as,asia);case'Europe':return continentMap(eur,europe);case'South America':return continentMap(southA,southAmerica);case'North America':return continentMap(northA,northAmerica);;default:return 0;}};return/*#__PURE__*/_jsxs(\"div\",{className:styles.regionBox,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.greyStripe,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.left,children:continentName}),/*#__PURE__*/_jsxs(\"div\",{className:styles.right,children:[isLoading&&/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}),show?/*#__PURE__*/_jsx(AiFillMinusCircle,{onClick:showHandler}):/*#__PURE__*/_jsx(AiFillPlusCircle,{onClick:showHandler})]})]}),show&&renderByContinent(continentName)]});};export default RegionBox;","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/regionBox/RegionBox.js"],"names":["React","useState","useEffect","styles","AiFillMinusCircle","AiFillPlusCircle","Clock","RegionBox","continentName","data","show","setShow","isLoading","setIsLoading","showHandler","continentMap","returnArr","mapArr","clockBoxes","map","el","renderByContinent","europe","asia","southAmerica","northAmerica","eur","as","southA","northA","forEach","d","continent","push","regionBox","greyStripe","left","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport * as styles from './RegionBox.module.scss'; \nimport { AiFillMinusCircle } from 'react-icons/ai'; \nimport { AiFillPlusCircle } from 'react-icons/ai'; \n\nimport Clock from '../clock/Clock'; \n\n\n\nconst RegionBox = ({ continentName, data }) => {\n\n   \n    const [ show, setShow ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(false); \n\n\n    const showHandler = () => {\n        setShow(show => !show ); \n    }\n\n    const continentMap = (returnArr, mapArr ) => {\n\n        returnArr = (<div className={styles.clockBoxes}>   \n            { \n                mapArr.map(el => \n                    \n                    <Clock \n                        key={el['id']}\n                        regionName={el['country']}\n                        cityName={el['city']}\n                        utcoffset={el['utcoffset']}\n                        openHoursOne={el['openHoursOne']}\n                        openHoursTwo={el['openHoursTwo']}\n                    />) \n            }\n        </div>); \n\n        return returnArr; \n\n    }\n\n    //need to optimize this part \n    const renderByContinent = (continentName) =>{\n\n       //mapArr\n        let europe = []; \n        let asia = []; \n        let southAmerica = []; \n        let northAmerica = []; \n\n        //returnArr\n        let eur = []; \n        let as = []; \n        let southA = []; \n        let northA = []; \n        \n        \n        data.forEach(d => {\n\n            if(d.continent === 'Europe'){\n                europe.push(d); \n            } else if(d.continent === 'Asia'){\n                asia.push(d);\n            } else if(d.continent == 'South America'){\n                southAmerica.push(d); \n            } else if(d.continent == 'North America'){\n                northAmerica.push(d); \n            } \n        }); \n\n          \n        switch(continentName){\n            case 'Asia': \n                return continentMap(as, asia);  \n            case 'Europe': \n                return continentMap(eur, europe);  \n            case 'South America': \n                return continentMap(southA, southAmerica); \n            case 'North America':\n                return continentMap(northA, northAmerica);; \n            default: \n                return 0; \n        }\n    }\n\n\n    return (\n        <div className={styles.regionBox}>\n            <div className={styles.greyStripe}>\n                <div className={styles.left}>{continentName}</div>\n                <div className={styles.right}>\n                    { isLoading && <div>Loading...</div> }\n                    { show ?  \n                        <AiFillMinusCircle onClick={showHandler}/> : \n                        <AiFillPlusCircle onClick={showHandler}/>\n                    }  \n                </div>\n            </div>\n            { show && renderByContinent(continentName)}\n            \n        </div>\n    )\n}\n\nexport default RegionBox; \n"]},"metadata":{},"sourceType":"module"}