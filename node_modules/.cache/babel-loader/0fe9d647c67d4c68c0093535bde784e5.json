{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/geoSelector/GeoSelector.js\";\nimport React, { useState } from 'react';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GeoSelector = () => {\n  // const initialGeoState = {  country: '', region: '' }; \n  // const [ geoState, setGeoState ] = useState(initialGeoState); \n  // const selectCountry = (val) => {\n  //     setGeoState({...setGeoState, country: val}); \n  // }\n  // const selectRegion = (val) => {\n  //     setGeoState({...setGeoState, region: val}); \n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CountryDropdown, {\n      value: geoState.country,\n      name: geoState.country,\n      showDefaultOption: true,\n      onChange: val => selectCountry(val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RegionDropdown, {\n      country: geoState.country,\n      value: geoState.region,\n      name: geoState.region,\n      showDefaultOption: true,\n      onChange: val => selectRegion(val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GeoSelector;\nexport default GeoSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeoSelector\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/geoSelector/GeoSelector.js"],"names":["React","useState","CountryDropdown","RegionDropdown","CountryRegionData","GeoSelector","geoState","country","val","selectCountry","region","selectRegion"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,QAAmE,+BAAnE;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAEtB;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA,sBACI;AAAA,4BACI,QAAC,eAAD;AACI,MAAA,KAAK,EAAEC,QAAQ,CAACC,OADpB;AAEI,MAAA,IAAI,EAAED,QAAQ,CAACC,OAFnB;AAGI,MAAA,iBAAiB,EAAE,IAHvB;AAII,MAAA,QAAQ,EAAEC,GAAG,IAAIC,aAAa,CAACD,GAAD;AAJlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,cAAD;AACI,MAAA,OAAO,EAAEF,QAAQ,CAACC,OADtB;AAEI,MAAA,KAAK,EAAED,QAAQ,CAACI,MAFpB;AAGI,MAAA,IAAI,EAAEJ,QAAQ,CAACI,MAHnB;AAII,MAAA,iBAAiB,EAAE,IAJvB;AAKI,MAAA,QAAQ,EAAEF,GAAG,IAAIG,YAAY,CAACH,GAAD;AALjC;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAhCD;;KAAMH,W;AAkCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react'; \nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\n\nconst GeoSelector = () => {\n\n    // const initialGeoState = {  country: '', region: '' }; \n\n    // const [ geoState, setGeoState ] = useState(initialGeoState); \n\n    // const selectCountry = (val) => {\n    //     setGeoState({...setGeoState, country: val}); \n    // }\n\n    // const selectRegion = (val) => {\n    //     setGeoState({...setGeoState, region: val}); \n    // }\n\n    return (\n        <div>\n            <CountryDropdown\n                value={geoState.country}\n                name={geoState.country}\n                showDefaultOption={true}\n                onChange={val => selectCountry(val)}\n            />\n\n            <RegionDropdown\n                country={geoState.country}\n                value={geoState.region}\n                name={geoState.region}\n                showDefaultOption={true}\n                onChange={val => selectRegion(val)}\n            />   \n        </div>\n    )\n}\n\nexport default GeoSelector; \n"]},"metadata":{},"sourceType":"module"}