{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/adminPanel/AdminPanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport sha256 from 'crypto-js/sha256';\nimport ContinentDropdown from '../continentDropdown/ContinentDropdown';\nimport GeoSelector from '../geoSelector/GeoSelector';\nimport TimeSelector from '../timeSelector/TimeSelector';\nimport * as styles from './AdminPanel.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminPanel = () => {\n  _s();\n\n  const url = 'https://rsqwsiljhg.execute-api.us-east-1.amazonaws.com/dev/postClocksRecord'; //const initialFormData = { continent: '', country: '', city: '', timeSlotOne: {from: '', to: ''}, timeSlotTwo: {from: '', to: ''}}; \n\n  const [formData, setFormData] = useState({\n    continent: '',\n    country: '',\n    city: '',\n    utcoffset: ''\n  });\n  const [timeSlotOne, setTimeSlotOne] = useState({\n    from: '',\n    to: ''\n  });\n  const [timeSlotTwo, setTimeSlotTwo] = useState({\n    from: '',\n    to: ''\n  });\n  const hashDigest = sha256(nonce + message);\n  console.log(hashDigest);\n\n  const postData = async url => {\n    // console.log(\"FORMDATA\", formData); \n    // console.log('TIME 1', timeSlotOne); \n    // console.log('TIME 2', timeSlotTwo); \n    //generate crypto \n    const info = {\n      \"id\": \"123\",\n      \"continent\": formData.continent,\n      \"country\": formData.country,\n      \"city\": formData.city,\n      \"utcoffset\": formData.utcoffset * 60,\n      \"openHoursOne\": `${timeSlotOne.from} - ${timeSlotOne.to}`,\n      \"openingHoursTwo\": `${timeSlotTwo.from} - ${timeSlotTwo.to}`\n    }; // const info = {\n    //     \"id\":\"56100\", \n    //     \"continent\": 'Europe', \n    //     \"country\": 'Ukraine',\n    //     \"city\": 'Kiev', \n    //     \"utcoffset\":\"180\",\n    //     \"openHoursOne\": `15:00 - 17:00`,\n    //     \"openingHoursTwo\": ``\n    // }; \n\n    const response = await fetch(url, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(info)\n    });\n    return response.json();\n  };\n\n  const handlePost = () => {\n    postData(url).then(data => console.log(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mainContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contentBox,\n      children: [/*#__PURE__*/_jsxDEV(ContinentDropdown, {\n        continent: selectedContinent => setFormData({ ...formData,\n          continent: selectedContinent\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: \"Choose country and region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GeoSelector, {\n          geo: selectedGeo => setFormData({ ...formData,\n            country: selectedGeo[0],\n            city: selectedGeo[1]\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.input,\n          children: \"If there is more than one slot, input one more time slot of opening hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TimeSelector, {\n          timeSlotOne: selectedTimeSlotOne => setTimeSlotOne({ ...timeSlotOne,\n            from: selectedTimeSlotOne[0],\n            to: selectedTimeSlotOne[1]\n          }),\n          timeSlotTwo: selectedTimeSlotTwo => setTimeSlotTwo({ ...timeSlotTwo,\n            from: selectedTimeSlotTwo[0],\n            to: selectedTimeSlotTwo[1]\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Enter UTC offcet (consider inputting with +/- value)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"UTC offset\",\n          onChange: e => setFormData({ ...formData,\n            utcoffset: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.submitBox,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.submitBtn,\n          onClick: handlePost,\n          children: \"Sumbit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminPanel, \"7rVmxhPOSx+L4Wrqc6ili+OdCio=\");\n\n_c = AdminPanel;\nexport default AdminPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/adminPanel/AdminPanel.js"],"names":["React","useEffect","useState","sha256","ContinentDropdown","GeoSelector","TimeSelector","styles","AdminPanel","url","formData","setFormData","continent","country","city","utcoffset","timeSlotOne","setTimeSlotOne","from","to","timeSlotTwo","setTimeSlotTwo","hashDigest","nonce","message","console","log","postData","info","response","fetch","method","mode","headers","body","JSON","stringify","json","handlePost","then","data","mainContainer","contentBox","selectedContinent","input","selectedGeo","selectedTimeSlotOne","selectedTimeSlotTwo","e","target","value","submitBox","submitBtn"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'; \nimport sha256 from 'crypto-js/sha256';\n\n\nimport ContinentDropdown from '../continentDropdown/ContinentDropdown'; \nimport GeoSelector from '../geoSelector/GeoSelector';\nimport TimeSelector from '../timeSelector/TimeSelector';  \nimport * as styles from './AdminPanel.module.scss'; \n\nconst AdminPanel = () => {\n\n    const url = 'https://rsqwsiljhg.execute-api.us-east-1.amazonaws.com/dev/postClocksRecord'; \n    //const initialFormData = { continent: '', country: '', city: '', timeSlotOne: {from: '', to: ''}, timeSlotTwo: {from: '', to: ''}}; \n    const [ formData, setFormData ] = useState({ continent: '', country: '', city: '', utcoffset: ''}); \n    const [ timeSlotOne, setTimeSlotOne ] = useState({ from: '', to: ''}); \n    const [ timeSlotTwo, setTimeSlotTwo ] = useState({ from: '', to: ''}); \n\n    const hashDigest = sha256(nonce + message);\n    console.log(hashDigest); \n    \n\n    const postData = async(url) => {\n        // console.log(\"FORMDATA\", formData); \n        // console.log('TIME 1', timeSlotOne); \n        // console.log('TIME 2', timeSlotTwo); \n\n        //generate crypto \n        \n\n        const info = {\n                    \"id\":\"123\", \n                    \"continent\": formData.continent, \n                    \"country\": formData.country,\n                    \"city\": formData.city, \n                    \"utcoffset\": (formData.utcoffset*60),\n                    \"openHoursOne\": `${timeSlotOne.from} - ${timeSlotOne.to}`,\n                    \"openingHoursTwo\": `${timeSlotTwo.from} - ${timeSlotTwo.to}`\n                }\n\n        // const info = {\n        //     \"id\":\"56100\", \n        //     \"continent\": 'Europe', \n        //     \"country\": 'Ukraine',\n        //     \"city\": 'Kiev', \n        //     \"utcoffset\":\"180\",\n        //     \"openHoursOne\": `15:00 - 17:00`,\n        //     \"openingHoursTwo\": ``\n        // }; \n\n        const response = await fetch(url, {\n            method: 'POST',\n            mode: 'cors',  \n            headers: { 'Content-Type': 'application/json' }, \n            body: JSON.stringify(info) \n        }); \n\n        return response.json(); \n\n    }\n\n    const handlePost = () => {\n        postData(url).then(data => console.log(data)); \n    }\n\n\n\n\n\n    return (\n        <div className={styles.mainContainer}>\n            <div className={styles.contentBox}>\n\n                <ContinentDropdown continent={selectedContinent => setFormData({...formData, continent: selectedContinent})}/>\n                \n                <div className={styles.input}>\n                    <div className={styles.input}>Choose country and region</div>\n                    <GeoSelector \n                        geo={selectedGeo => setFormData({...formData, country: selectedGeo[0], city: selectedGeo[1]})}/>\n                </div>\n\n                <div className={styles.input}>\n                    <div className={styles.input}>If there is more than one slot, input one more time slot of opening hours</div>\n                    <TimeSelector\n                        timeSlotOne={selectedTimeSlotOne => setTimeSlotOne({ ...timeSlotOne, from: selectedTimeSlotOne[0], to: selectedTimeSlotOne[1]})}\n                        timeSlotTwo={selectedTimeSlotTwo => setTimeSlotTwo({ ...timeSlotTwo, from: selectedTimeSlotTwo[0], to: selectedTimeSlotTwo[1]})}/>\n                </div>\n\n                <div className={styles.input}>\n                    <div>Enter UTC offcet (consider inputting with +/- value)</div>\n                    <input type=\"text\" placeholder=\"UTC offset\" onChange={e => setFormData({...formData, utcoffset: e.target.value })}/>\n                </div>\n\n                <div className={styles.submitBox}>\n                    <button className={styles.submitBtn} onClick={handlePost}>Sumbit</button>\n                </div>\n                \n            </div> \n        </div>\n    )\n}\n\nexport default AdminPanel; \n"]},"metadata":{},"sourceType":"module"}