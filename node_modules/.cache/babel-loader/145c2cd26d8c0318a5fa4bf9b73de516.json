{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/clock/Clock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Overlay, Popover } from 'react-bootstrap';\nimport './Clock.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clock = ({\n  regionName,\n  cityName,\n  utcoffset,\n  openHoursOne,\n  openHoursTwo\n}) => {\n  _s();\n\n  //let city = cityName; \n  let localTime = {};\n  const initialState = {\n    secondRatio: 0,\n    minuteRatio: 0,\n    hourRatio: 0\n  }; //const [ cit, setCit ] = useState(''); \n\n  const [clockState, setClockState] = useState(initialState);\n  const [time, setTime] = useState(0);\n  const [dayTimeStr, setDayTimeStr] = useState('');\n  const [openButton, showOpenButton] = useState(true); //for bs popup \n\n  const [show, setShow] = useState(false);\n  const [target, setTarget] = useState(null);\n  const ref = useRef(null);\n\n  const handleClick = event => {\n    setShow(!show);\n    setTarget(event.target);\n  };\n\n  const calculateUniversalUTC = () => {\n    //returns local date from where the app is used \n    let date = new Date(); //console.log(date); \n    //offcet taken at the place where app is used \n\n    let app_utc_offcet = date.getTimezoneOffset(); //returns -480 \n    //this is the abstract date according to UTC\n\n    date.setHours(date.getHours() + app_utc_offcet / 60); //console.log('ABSTRACT TIME', date); \n\n    return date;\n  };\n\n  const calculateCurrentLocalDate = () => {\n    let utcdate = calculateUniversalUTC(); //calculate time according to offcet of the country\n\n    utcdate.setHours(utcdate.getHours() - utcoffset / 60); //console.log('SHANGHAI TIME', utcdate); \n\n    return utcdate;\n  };\n\n  const formatDate = date => {\n    const d = new date(),\n          month = '' + (d.getMonth() + 1),\n          day = '' + d.getDate(),\n          year = d.getFullYear();\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n  };\n\n  const digitalClockConverter = date => {\n    //getting day of the week \n    const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'];\n    let dayNum = Number(date.getDay());\n    let stsDay = days[dayNum]; //getting hours in am/pm \n\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    let strTime = hours + ':' + minutes + ' ' + ampm;\n    let timeStr = stsDay + ' ' + strTime;\n    setDayTimeStr(dayTimeStr => timeStr);\n  };\n\n  const clockStateHandler = date => {\n    let secondRatio = date.getSeconds() / 60;\n    let minuteRatio = (secondRatio + date.getMinutes()) / 60;\n    let hourRatio = (minuteRatio + date.getHours()) / 12;\n    setClockState({ ...clockState,\n      secondRate: secondRatio,\n      minuteRate: minuteRatio,\n      hourRate: hourRatio\n    });\n  };\n\n  const clockHandler = () => {\n    let currentDate = calculateCurrentLocalDate();\n    clockStateHandler(currentDate);\n    digitalClockConverter(currentDate);\n  };\n\n  const calculateLocalTime = () => {\n    //Amsterdam 19:00 is 01:00 locally => 6 hours \n    //Amsterdam utc +2 Local utc +8 => 6 hours difference \n    const date = new Date();\n    const localUTC = date.getTimezoneOffset();\n    let utcDiff = localUTC / 60 - utcoffset / 60; //console.log(utcDiff); //6\n    //11:00-14:00\n\n    let countryHours = openHoursOne.split('-'); //['11:00', '14:00'] or instead ['11am', '2pm']\n\n    let hoursFrom = Number(countryHours[0].slice(0, 2)) + utcDiff;\n    let hoursTo = Number(countryHours[1].slice(0, 2)) + utcDiff;\n    return {\n      hoursFrom,\n      hoursTo\n    };\n  };\n\n  const handleOpenButton = () => {\n    //get current local time\n    let currentLocalTime = calculateCurrentLocalDate(); //console.log(currentLocalTime); \n\n    const timeNow = new Date(); //console.log(openHoursOne); \n\n    let startTime = '11:00';\n    let endTime = '18:00';\n    let startTimeObj = new Date(\"2021-04-16 \" + startTime);\n    let endTimeObj = new Date(\"2021-04-16 \" + endTime);\n    let open = timeNow < endTimeObj && timeNow > startTimeObj ? 'open' : 'close'; //console.log(open); \n  };\n\n  handleOpenButton();\n  localTime = calculateLocalTime(); //console.log(localTime);\n\n  useEffect(() => {\n    //console.log('CITYNAME', cityName); \n    const interval = setInterval(() => {\n      clockHandler();\n      setTime(Date.now());\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainFont\",\n        children: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"secondaryFont\",\n        children: regionName.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainFont\",\n        children: dayTimeStr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand hour\",\n          style: {\n            transform: `translate(-50%) rotate(${clockState.hourRate * 360}deg)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand minute\",\n          style: {\n            transform: `translate(-50%) rotate(${clockState.minuteRate * 360}deg)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hand second\",\n          style: {\n            transform: `translate(-50%) rotate(${clockState.secondRate * 360}deg)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number7\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number9\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number10\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number11\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"11\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number number12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: openButton ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"oval green\",\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"oval red\",\n          children: \"Closed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 82\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"1:01:38 until break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"5:01:38 until close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"oval2\",\n          onClick: handleClick,\n          children: \"Show Open/Close Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n          show: show,\n          target: target,\n          placement: \"top\",\n          containerPadding: 20,\n          children: /*#__PURE__*/_jsxDEV(Popover, {\n            id: \"popover-contained\",\n            children: /*#__PURE__*/_jsxDEV(Popover.Content, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"contentBox\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"shedule\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [cityName.toUpperCase(), \" TIME\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: openHoursOne\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"shedule\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"LOCAL TIME\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: `${localTime['hoursFrom']}:00 - ${localTime['hoursTo']}:00`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Clock, \"gIu5OtVywDEX5yZLruHsAxjFHOA=\");\n\n_c = Clock;\nexport default Clock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/clock/Clock.js"],"names":["React","useState","useEffect","useRef","Overlay","Popover","Clock","regionName","cityName","utcoffset","openHoursOne","openHoursTwo","localTime","initialState","secondRatio","minuteRatio","hourRatio","clockState","setClockState","time","setTime","dayTimeStr","setDayTimeStr","openButton","showOpenButton","show","setShow","target","setTarget","ref","handleClick","event","calculateUniversalUTC","date","Date","app_utc_offcet","getTimezoneOffset","setHours","getHours","calculateCurrentLocalDate","utcdate","formatDate","d","month","getMonth","day","getDate","year","getFullYear","length","join","digitalClockConverter","days","dayNum","Number","getDay","stsDay","hours","minutes","getMinutes","ampm","strTime","timeStr","clockStateHandler","getSeconds","secondRate","minuteRate","hourRate","clockHandler","currentDate","calculateLocalTime","localUTC","utcDiff","countryHours","split","hoursFrom","slice","hoursTo","handleOpenButton","currentLocalTime","timeNow","startTime","endTime","startTimeObj","endTimeObj","open","interval","setInterval","now","clearInterval","toUpperCase","transform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'; \nimport { Overlay, Popover } from 'react-bootstrap';\n\nimport './Clock.css'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\n\n\nconst Clock = ({ regionName, cityName, utcoffset, openHoursOne, openHoursTwo }) => {\n\n    //let city = cityName; \n    let localTime = {}; \n\n    const initialState = { secondRatio: 0, minuteRatio: 0, hourRatio: 0 }; \n    \n    //const [ cit, setCit ] = useState(''); \n    const [ clockState, setClockState ] = useState(initialState);\n    const [ time, setTime ] = useState(0);  \n    const [ dayTimeStr, setDayTimeStr ] = useState('');\n    const [ openButton, showOpenButton ] = useState(true); \n\n    //for bs popup \n    const [show, setShow] = useState(false);\n    const [target, setTarget] = useState(null);\n    const ref = useRef(null);\n\n    \n    \n    const handleClick = (event) => {\n        setShow(!show);\n        setTarget(event.target);\n    };\n\n    const calculateUniversalUTC = () => {\n\n        //returns local date from where the app is used \n        let date = new Date;    \n        //console.log(date); \n    \n        //offcet taken at the place where app is used \n        let app_utc_offcet = date.getTimezoneOffset(); //returns -480 \n\n        //this is the abstract date according to UTC\n        date.setHours(date.getHours() + (app_utc_offcet/60)); \n        //console.log('ABSTRACT TIME', date); \n\n        return date; \n    }\n\n    const calculateCurrentLocalDate = () => {\n\n        let utcdate = calculateUniversalUTC(); \n\n        //calculate time according to offcet of the country\n        utcdate.setHours(utcdate.getHours() - (utcoffset/60)); \n        //console.log('SHANGHAI TIME', utcdate); \n\n        return utcdate; \n\n    }\n\n    const formatDate = (date) => {\n        const d = new date,\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n    }\n\n    const digitalClockConverter = (date) => {\n\n        \n        //getting day of the week \n        const days = ['Sun','Mon','Tue','Wed','Thur','Fri','Sat'];\n        let dayNum = Number(date.getDay()); \n        let stsDay = days[dayNum]; \n        \n\n        //getting hours in am/pm \n        let hours = date.getHours();\n        let minutes = date.getMinutes();\n        let ampm = hours >= 12 ? 'PM' : 'AM';\n        hours = hours % 12;\n        hours = hours ? hours : 12; \n        minutes = minutes < 10 ? '0'+minutes : minutes;\n        let strTime = hours + ':' + minutes + ' ' + ampm;\n        \n        let timeStr = stsDay + ' ' + strTime;\n\n        setDayTimeStr( dayTimeStr => timeStr); \n        \n    } \n\n    \n\n    const clockStateHandler = (date) => {\n        \n        let secondRatio = date.getSeconds() / 60; \n        let minuteRatio = (secondRatio + date.getMinutes()) / 60; \n        let hourRatio = (minuteRatio + date.getHours()) / 12;  \n    \n        setClockState({...clockState, secondRate: secondRatio, minuteRate: minuteRatio, hourRate: hourRatio});\n\n    }\n\n    const clockHandler = () => {\n\n        \n        let currentDate = calculateCurrentLocalDate(); \n    \n        clockStateHandler(currentDate); \n        digitalClockConverter(currentDate);\n\n\n    }\n\n    const calculateLocalTime = () => {\n        //Amsterdam 19:00 is 01:00 locally => 6 hours \n        //Amsterdam utc +2 Local utc +8 => 6 hours difference \n\n        const date = new Date;\n        const localUTC = date.getTimezoneOffset(); \n\n        let utcDiff = (localUTC/60) - (utcoffset/60); \n        //console.log(utcDiff); //6\n\n        //11:00-14:00\n        let countryHours = openHoursOne.split('-'); //['11:00', '14:00'] or instead ['11am', '2pm']\n        \n        let hoursFrom = Number(countryHours[0].slice(0,2)) + utcDiff;  \n        let hoursTo = Number(countryHours[1].slice(0,2)) + utcDiff;\n        \n        return { hoursFrom, hoursTo }; \n        \n    }\n\n\n    const handleOpenButton = () => {\n\n        //get current local time\n        let currentLocalTime = calculateCurrentLocalDate(); \n        //console.log(currentLocalTime); \n\n        const timeNow = new Date(); \n        //console.log(openHoursOne); \n        let startTime = '11:00'; \n        let endTime = '18:00'; \n\n        let startTimeObj = new Date(\"2021-04-16 \" + startTime);\n        let endTimeObj = new Date(\"2021-04-16 \" + endTime);\n        \n        \n        let open = timeNow < endTimeObj && timeNow > startTimeObj ? 'open' : 'close'; \n        //console.log(open); \n    }\n\n    handleOpenButton();  \n\n\n\n\n    localTime = calculateLocalTime(); \n    //console.log(localTime);\n    \n    \n\n    \n    useEffect(() => {\n        //console.log('CITYNAME', cityName); \n        const interval = setInterval(() => {\n            clockHandler();\n            setTime(Date.now())    \n        }, 1000); \n       \n        return () => {\n            clearInterval(interval);\n        };\n    \n        \n    }, [time]); \n\n\n    return (\n        <div className=\"mainContainer\">\n            <div className=\"top\">\n                <div className=\"mainFont\">{cityName}</div>\n                <div className=\"secondaryFont\">{regionName.toUpperCase()}</div>\n                <div className=\"mainFont\">{dayTimeStr}</div>\n            </div>\n\n            <div class=\"middle\">\n                <div className=\"clock\">\n                    <div className=\"hand hour\" \n                        style={{transform: `translate(-50%) rotate(${clockState.hourRate * 360}deg)`}}>\n                    </div>\n                    <div className=\"hand minute\"\n                        style={{transform: `translate(-50%) rotate(${clockState.minuteRate * 360}deg)`}}>\n                    </div>\n                    <div className=\"hand second\"\n                        style={{transform: `translate(-50%) rotate(${clockState.secondRate * 360}deg)`}}>\n                    </div>\n\n                    <div className=\"number number1\">\n                        <div>1</div>\n                    </div>\n\n                    <div className=\"number number2\">\n                        <div>2</div>\n                    </div>\n\n                    <div className=\"number number3\">\n                        <div>3</div>\n                    </div>\n\n                    <div className=\"number number4\">\n                        <div>4</div>\n                    </div>\n\n                    <div className=\"number number5\">\n                        <div>5</div>\n                    </div>\n\n                    <div className=\"number number6\">\n                        <div>6</div>\n                    </div>\n\n                    <div className=\"number number7\">\n                        <div>7</div>\n                    </div>\n\n                    <div className=\"number number8\">\n                        <div>8</div>\n                    </div>\n\n                    <div className=\"number number9\">\n                        <div>9</div>\n                    </div>\n\n                    <div className=\"number number10\">\n                        <div>10</div>\n                    </div>\n\n                    <div className=\"number number11\">\n                        <div>11</div>\n                    </div>\n\n                    <div className=\"number number12\">\n                        <div>12</div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"bottom\">\n                <div>\n                    {\n                        openButton ? (<div className=\"oval green\">Open</div>) : (<div className=\"oval red\">Closed</div>)\n                    }\n                    \n                </div>\n                <div className=\"addInfo\">\n                    <div>1:01:38 until break</div>\n                    <div>5:01:38 until close</div>\n                </div>\n\n                <div ref={ref}>\n                    \n                    <div className=\"oval2\" onClick={handleClick}>Show Open/Close Hours</div>\n\n                    <Overlay show={show} target={target} placement=\"top\" containerPadding={20}>\n                        <Popover id=\"popover-contained\">\n                            <Popover.Content>\n\n                                <div class=\"contentBox\">\n                                    <div class=\"shedule\">\n                                        <div>{cityName.toUpperCase()} TIME</div>\n                                        <div>{openHoursOne}</div>\n                                    </div>\n                                    <div class=\"shedule\">\n                                        <div>LOCAL TIME</div>\n                                        <div>{`${localTime['hoursFrom']}:00 - ${localTime['hoursTo']}:00`}</div>\n                                    </div>  \n                                </div>\n                                \n                            </Popover.Content>\n                        </Popover>\n                    </Overlay>\n                </div>               \n            </div>            \n        </div>\n    )\n}\n\nexport default Clock; \n"]},"metadata":{},"sourceType":"module"}