{"ast":null,"code":"var _jsxFileName = \"/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/regionBox/RegionBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as styles from './RegionBox.module.scss';\nimport { AiFillMinusCircle } from 'react-icons/ai';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport Clock from '../clock/Clock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegionBox = ({\n  continentName,\n  data\n}) => {\n  _s();\n\n  const [show, setShow] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(data);\n\n  const showHandler = () => {\n    setShow(show => !show);\n  }; //need to optimize this part \n\n\n  const renderByContinent = continentName => {\n    let allData = data.map(d => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: d.continent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: d.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: d.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: d.utcoffset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: d.openHoursOne\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: d.openingHoursTwo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, d.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false));\n    let europe = []; // const europe = \n    // (<div className={styles.clockBoxes}>   \n    //     <Clock \n    //         regionName={'Netherlands'}\n    //         cityName={'Amsterdam'}\n    //     />\n    //     <Clock \n    //         regionName={'Belgium'}\n    //         cityName={'Brussels'}\n    //     />\n    //     <Clock  \n    //         regionName={'France'}\n    //         cityName={'Paris'}\n    //     />\n    //     <Clock \n    //         regionName={'United Kingdom'}\n    //         cityName={'London'}\n    //     />\n    // </div>); \n    // const southAmerica = \n    // (<div className={styles.clockBoxes}>   \n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Argentina'}\n    //         cityName={'Buenos Aires'}\n    //     />\n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Brazil'}\n    //         cityName={'San Paulo'}\n    //     />\n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Chile'}\n    //         cityName={'Santiago'}\n    //     />\n    // </div>); \n    // const northAmerica = \n    // (<div className={styles.clockBoxes}>   \n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'USA'}\n    //         cityName={'New York'}\n    //     />\n    //     <Clock \n    //         secondRatio={clockState.secondRate}\n    //         minuteRatio={clockState.minuteRate}\n    //         hourRatio={clockState.hourRate}\n    //         regionName={'Canada'}\n    //         cityName={'Toronto'}\n    //     />\n    // </div>); \n\n    switch (continentName) {\n      // case 'Asia': \n      //     return asia; \n      case 'Europe':\n        return europe;\n      // case 'South America': \n      //     return southAmerica; \n      // case 'North America':\n      //     return northAmerica; \n\n      default:\n        return 0;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.regionBox,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.greyStripe,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.left,\n        children: data.continent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.right,\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 35\n        }, this), show ? /*#__PURE__*/_jsxDEV(AiFillMinusCircle, {\n          onClick: showHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(AiFillPlusCircle, {\n          onClick: showHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), show && renderByContinent(continentName)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegionBox, \"b5sSxw7RO2GIZGDfGU8+TXgjfng=\");\n\n_c = RegionBox;\nexport default RegionBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegionBox\");","map":{"version":3,"sources":["/Users/leilei/Documents/Main/Tech Tasks/Fintonium/tradinghours/src/components/regionBox/RegionBox.js"],"names":["React","useState","useEffect","styles","AiFillMinusCircle","AiFillPlusCircle","Clock","RegionBox","continentName","data","show","setShow","isLoading","setIsLoading","console","log","showHandler","renderByContinent","allData","map","d","continent","country","city","utcoffset","openHoursOne","openingHoursTwo","id","europe","regionBox","greyStripe","left","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'; \nimport * as styles from './RegionBox.module.scss'; \nimport { AiFillMinusCircle } from 'react-icons/ai'; \nimport { AiFillPlusCircle } from 'react-icons/ai'; \n\nimport Clock from '../clock/Clock'; \n\n\n\nconst RegionBox = ({ continentName, data }) => {\n\n   \n    const [ show, setShow ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(false); \n\n    console.log(data);\n\n    const showHandler = () => {\n        setShow(show => !show ); \n    }\n\n    //need to optimize this part \n    const renderByContinent = (continentName) =>{\n        \n        let allData = data.map( d => \n            <>\n                <div key={d.id}>\n                    <div>{d.continent}</div>\n                    <div>{d.country}</div>\n                    <div>{d.city}</div>\n                    <div>{d.utcoffset}</div>\n                    <div>{d.openHoursOne}</div>\n                    <div>{d.openingHoursTwo}</div>\n                </div>\n            </>\n        )\n\n\n        let europe = []; \n        \n\n\n\n\n\n        // const europe = \n        // (<div className={styles.clockBoxes}>   \n        //     <Clock \n        //         regionName={'Netherlands'}\n        //         cityName={'Amsterdam'}\n        //     />\n        //     <Clock \n\n        //         regionName={'Belgium'}\n        //         cityName={'Brussels'}\n        //     />\n        //     <Clock  \n        //         regionName={'France'}\n        //         cityName={'Paris'}\n        //     />\n        //     <Clock \n        //         regionName={'United Kingdom'}\n        //         cityName={'London'}\n        //     />\n        // </div>); \n\n        // const southAmerica = \n        // (<div className={styles.clockBoxes}>   \n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Argentina'}\n        //         cityName={'Buenos Aires'}\n        //     />\n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Brazil'}\n        //         cityName={'San Paulo'}\n        //     />\n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Chile'}\n        //         cityName={'Santiago'}\n        //     />\n            \n        // </div>); \n\n        // const northAmerica = \n        // (<div className={styles.clockBoxes}>   \n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'USA'}\n        //         cityName={'New York'}\n        //     />\n        //     <Clock \n        //         secondRatio={clockState.secondRate}\n        //         minuteRatio={clockState.minuteRate}\n        //         hourRatio={clockState.hourRate}\n        //         regionName={'Canada'}\n        //         cityName={'Toronto'}\n        //     />\n            \n            \n        // </div>); \n        \n        \n        switch(continentName){\n            // case 'Asia': \n            //     return asia; \n            case 'Europe': \n                return europe; \n            // case 'South America': \n            //     return southAmerica; \n            // case 'North America':\n            //     return northAmerica; \n            default: \n                return 0; \n        }\n    }\n\n    \n    \n\n   \n    return (\n        <div className={styles.regionBox}>\n            <div className={styles.greyStripe}>\n                <div className={styles.left}>{data.continent}</div>\n                <div className={styles.right}>\n                    {isLoading && <div>Loading...</div>}\n                    {show ?  \n                        <AiFillMinusCircle onClick={showHandler}/> : \n                        <AiFillPlusCircle onClick={showHandler}/>\n                    }  \n                </div>\n            </div>\n            { show && renderByContinent(continentName)}\n            \n        </div>\n    )\n}\n\nexport default RegionBox; \n"]},"metadata":{},"sourceType":"module"}